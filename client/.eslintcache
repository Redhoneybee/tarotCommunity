[{"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\App.js":"1","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"2","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"3","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"4","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\reportWebVitals.js":"5","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\index.js":"6","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_reducers\\index.js":"7","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_actions\\types.js":"8","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_actions\\user_action.js":"9","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_reducers\\user_reducer.js":"10","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\hoc\\auth.js":"11","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\NavBar\\NavBar.js":"12","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\NavBar\\Selection\\RightMenu.js":"13","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\NavBar\\Selection\\LeftMenu.js":"14","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\config.js":"15","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TSpreads\\SpreadsFileUpload.js":"16","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TSpreads\\SpreadsUpload.js":"17","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Upload.js":"18","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\TDirectory.js":"19","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\DetailProductPage.js":"20","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\FileUpload.js":"21","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\ProductImage.js":"22","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\ProductTable.js":"23","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TarotBoard.js":"24","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TBoardUpload.js":"25","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TboardFileUpload.js":"26","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\Update.js":"27","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\Sections\\DetailTboardPage.js":"28","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\Sections\\TboardTable.js":"29","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\utils\\ImageSlider.js":"30","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\TdirecImageSlider.js":"31","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\ImageSlider.js":"32","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TSpreads\\Tspreads.js":"33","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TBoardUpdate.js":"34","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TBoardFileUpload.js":"35","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\Sections\\CommentTable.js":"36","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\Navigation.js":"37","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\home.js":"38"},{"size":3192,"mtime":1611311719473,"results":"39","hashOfConfig":"40"},{"size":2205,"mtime":1611154210192,"results":"41","hashOfConfig":"40"},{"size":1852,"mtime":1610364536657,"results":"42","hashOfConfig":"40"},{"size":2694,"mtime":1610359642845,"results":"43","hashOfConfig":"40"},{"size":362,"mtime":1606625502126,"results":"44","hashOfConfig":"40"},{"size":987,"mtime":1610273097657,"results":"45","hashOfConfig":"40"},{"size":162,"mtime":1610280077801,"results":"46","hashOfConfig":"40"},{"size":125,"mtime":1610282943572,"results":"47","hashOfConfig":"40"},{"size":784,"mtime":1610283025516,"results":"48","hashOfConfig":"40"},{"size":555,"mtime":1610283075294,"results":"49","hashOfConfig":"40"},{"size":1192,"mtime":1610523703374,"results":"50","hashOfConfig":"40"},{"size":1400,"mtime":1610530277005,"results":"51","hashOfConfig":"40"},{"size":1136,"mtime":1610363677516,"results":"52","hashOfConfig":"40"},{"size":1901,"mtime":1610367128841,"results":"53","hashOfConfig":"40"},{"size":57,"mtime":1610350538393,"results":"54","hashOfConfig":"40"},{"size":2360,"mtime":1610542995983,"results":"55","hashOfConfig":"40"},{"size":3317,"mtime":1610593263233,"results":"56","hashOfConfig":"40"},{"size":3296,"mtime":1610621184982,"results":"57","hashOfConfig":"40"},{"size":2480,"mtime":1611308963155,"results":"58","hashOfConfig":"40"},{"size":1449,"mtime":1610959838009,"results":"59","hashOfConfig":"40"},{"size":2346,"mtime":1610600773868,"results":"60","hashOfConfig":"40"},{"size":645,"mtime":1610609475961,"results":"61","hashOfConfig":"40"},{"size":888,"mtime":1610959777566,"results":"62","hashOfConfig":"40"},{"size":1899,"mtime":1611156117237,"results":"63","hashOfConfig":"40"},{"size":3281,"mtime":1610688355380,"results":"64","hashOfConfig":"40"},{"size":2357,"mtime":1611132747837,"results":"65","hashOfConfig":"40"},{"size":3419,"mtime":1611131908769,"results":"66","hashOfConfig":"40"},{"size":874,"mtime":1610885943846,"results":"67","hashOfConfig":"40"},{"size":1609,"mtime":1611153574906,"results":"68","hashOfConfig":"40"},{"size":694,"mtime":1610948263180,"results":"69","hashOfConfig":"40"},{"size":706,"mtime":1610958678799,"results":"70","hashOfConfig":"40"},{"size":548,"mtime":1610958665649,"results":"71","hashOfConfig":"40"},{"size":1378,"mtime":1610542798333,"results":"72","hashOfConfig":"40"},{"size":3575,"mtime":1611153582261,"results":"73","hashOfConfig":"40"},{"size":2132,"mtime":1611132821381,"results":"74","hashOfConfig":"40"},{"size":1069,"mtime":1611153395177,"results":"75","hashOfConfig":"40"},{"size":384,"mtime":1611311224075,"results":"76","hashOfConfig":"40"},{"size":1056,"mtime":1611311626288,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nhshyc",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"85"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"85"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"115"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"132"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"111"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"132"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"132"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"111"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"132"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"132"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"115"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"111"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"126"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"115"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\App.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\LandingPage\\LandingPage.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\LoginPage\\LoginPage.js",["180"],"  \r\nimport React, { useState } from 'react'\r\nimport Axios from 'axios'\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginUser } from '../../../_actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './css/LoginPage.css'\r\nfunction LoginPage(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [Email, setEmail] = useState(\"\")\r\n    const [Password, setPassword] = useState(\"\")\r\n\r\n    const onEmailHandler = (event) => {\r\n        setEmail(event.currentTarget.value)\r\n    }\r\n\r\n    const onPasswordHandler = (event) => {\r\n        setPassword(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        let body = {\r\n            email: Email,\r\n            password: Password\r\n        }\r\n\r\n        dispatch(loginUser(body))\r\n            .then(response => {\r\n                if (response.payload.loginSuccess) {\r\n                    props.history.push('/')\r\n                } else {\r\n                    alert('Error˝')\r\n                }\r\n            })\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"login-box\">\r\n            <h2>Login</h2>\r\n            <form onSubmit={onSubmitHandler}\r\n            >    \r\n                <div className=\"user-box\">\r\n                <label>Email</label>\r\n                <input type=\"email\" value={Email} onChange={onEmailHandler} required=\"\" />\r\n                </div>\r\n                <div className=\"user-box\">\r\n                <label>Password</label>\r\n                <input type=\"password\" value={Password} onChange={onPasswordHandler} required=\"\" />\r\n                </div>\r\n                <button type=\"Submit\">\r\n                 Login\r\n                </button>\r\n                <a href=\"/register\">register now!</a>\r\n               </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage)",["181","182"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["183"],"import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { registerUser } from '../../../_actions/user_action';\r\nimport Axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Register.css';\r\nfunction RegisterPage(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [Email, setEmail] = useState(\"\")\r\n    const [Name, setName] = useState(\"\")\r\n    const [Password, setPassword] = useState(\"\")\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n\r\n    const onEmailHandler = (event) => {\r\n        setEmail(event.currentTarget.value)\r\n    }\r\n\r\n    const onNameHandler = (event) => {\r\n        setName(event.currentTarget.value)\r\n    }\r\n\r\n    const onPasswordHandler = (event) => {\r\n        setPassword(event.currentTarget.value)\r\n    }\r\n\r\n    const onConfirmPasswordHandler = (event) => {\r\n        setConfirmPassword(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (Password !== ConfirmPassword) {\r\n            return alert('비밀번호와 비밀번호 확인은 같아야 합니다.')\r\n        }\r\n\r\n        let body = {\r\n            email: Email,\r\n            password: Password,\r\n            name: Name\r\n        }\r\n        dispatch(registerUser(body))\r\n            .then(response => {\r\n                if (response.payload.success) {\r\n                    props.history.push(\"/login\")\r\n                } else {\r\n                    alert(\"Failed to sign up\")\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"register-box\">\r\n            <h2>Register</h2>\r\n            <form onSubmit={onSubmitHandler}\r\n            >   \r\n            <div className=\"user-box\">\r\n                <label>Email</label>\r\n                <input type=\"email\" value={Email} onChange={onEmailHandler} />\r\n               </div>\r\n               <div className=\"user-box\">\r\n                <label>Name</label>\r\n                <input type=\"text\" value={Name} onChange={onNameHandler} />\r\n              </div>\r\n              <div className=\"user-box\">\r\n                <label>Password</label>\r\n                <input type=\"password\" value={Password} onChange={onPasswordHandler} />\r\n                </div>\r\n                <div className=\"user-box\">\r\n                <label>Confirm Password</label>\r\n                <input type=\"password\" value={ConfirmPassword} onChange={onConfirmPasswordHandler} />\r\n                </div>\r\n                <br />\r\n                <button type=\"submit\">\r\n                   Sign up\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(RegisterPage)","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\reportWebVitals.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\index.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_reducers\\index.js",[],["184","185"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_actions\\types.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_actions\\user_action.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_reducers\\user_reducer.js",["186","187","188","189"],"import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER\r\n} from '../_actions/types';\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loginSuccess: action.payload }\r\n            break;\r\n        case REGISTER_USER:\r\n            return { ...state, register: action.payload }\r\n            break;\r\n            case AUTH_USER:\r\n                return { ...state, userData: action.payload }\r\n                break;\r\n        default:\r\n            return state;\r\n    }\r\n}",["190","191"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\hoc\\auth.js",["192"],"import React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_action';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (ComposedClass, reload, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n\r\n            dispatch(auth()).then(async response => {\r\n                if (await !response.payload.isAuth) {\r\n                    if (reload) {\r\n                        props.history.push('/login')\r\n                    }\r\n                } else {\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    else {\r\n                        if (reload === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            \r\n        }, [dispatch, props.history, user.googleAuth])\r\n\r\n        return (\r\n            <ComposedClass {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\NavBar\\NavBar.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\NavBar\\Selection\\RightMenu.js",[],["193","194"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\NavBar\\Selection\\LeftMenu.js",["195","196"],"import React from 'react';\r\nimport { Menu } from 'antd';\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nfunction LeftMenu(props) {\r\n  return (\r\n    <Menu mode={props.mode}>\r\n    <Menu.Item key=\"mail\">\r\n      <a href=\"/\">Home</a>\r\n    </Menu.Item>\r\n    <SubMenu title={<span>타로오션</span>}>\r\n      <MenuItemGroup title=\"타로이야기나눔\">\r\n        <Menu.Item key=\"tarot_D\"><a href=\"/tarotdirectory\">타로백과사전</a></Menu.Item>\r\n        <Menu.Item key=\"tarot_S\"><a href=\"/tarotspread\">스프레드배열법</a></Menu.Item>\r\n        <Menu.Item key=\"tarot_B\"><a href=\"/tarotboard\">정보/공유</a></Menu.Item>\r\n      </MenuItemGroup>\r\n    </SubMenu>\r\n\r\n    <SubMenu title={<span>점성학오션</span>}>\r\n      <MenuItemGroup title=\"점성학이야기나눔\">\r\n        <Menu.Item key=\"setting:1\"><a href=\"/tarotdirectory\"></a>점성학알아보기</Menu.Item>\r\n        <Menu.Item key=\"setting:2\"><a href=\"/tarotdirectory\"></a>정보/공유</Menu.Item>\r\n      </MenuItemGroup>\r\n    </SubMenu>\r\n\r\n    <SubMenu title={<span>사주오션</span>}>\r\n      <MenuItemGroup title=\"사주이야기나눔\">\r\n        <Menu.Item key=\"setting:1\">내사주알아보기</Menu.Item>\r\n        <Menu.Item key=\"setting:2\">정보/공유</Menu.Item>\r\n      </MenuItemGroup>\r\n    </SubMenu>\r\n\r\n    <SubMenu title={<span>커뮤니티</span>}>\r\n      <MenuItemGroup title=\"도란도란\">\r\n        <Menu.Item key=\"setting:1\">가입인사</Menu.Item>\r\n        <Menu.Item key=\"setting:2\">자유수다/고민방</Menu.Item>\r\n        <Menu.Item key=\"setting:3\">20대수다/고민방</Menu.Item>\r\n        <Menu.Item key=\"setting:4\">30대수다/고민방</Menu.Item>\r\n        <Menu.Item key=\"setting:5\">40대수다/고민방</Menu.Item>\r\n        <Menu.Item key=\"setting:6\">50대수다/고민방</Menu.Item>\r\n      </MenuItemGroup>\r\n    </SubMenu>\r\n  </Menu>\r\n  )\r\n}\r\n\r\nexport default LeftMenu",["197","198"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\config.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TSpreads\\SpreadsFileUpload.js",["199"],"import React, { useState } from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport axios from 'axios';\r\n\r\n\r\nfunction SpreadsFileUpload(props) {\r\n\r\n    const [Images, setImages] = useState([])\r\n\r\n    const dropHandler = (files) => {\r\n\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/fomr-data' }\r\n        }\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/spreads/tarot', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setImages([...Images, response.data.filePath])\r\n                    props.refreshFunction([...Images, response.data.filePath])\r\n\r\n\r\n                } else {\r\n                    alert('파일을 저장하는데 실패했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    const deleteHandler = (image) => {\r\n        const currentIndex = Images.indexOf(image);\r\n        let newImages = [...Images]\r\n        newImages.splice(currentIndex, 1)\r\n        setImages(newImages)\r\n        props.refreshFunction(newImages)\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Dropzone onDrop={dropHandler}>\r\n                {({ getRootProps, getInputProps }) => (\r\n                    <div\r\n                        style={{\r\n                            width: 300, height: 240, border: '1px solid lightgray',\r\n                            display: 'flex', alignItems: 'center', justifyContent: 'center'\r\n                        }}\r\n                        {...getRootProps()}>\r\n                        <input {...getInputProps()} />\r\n                        <p>이미지첨부</p>\r\n                    </div>\r\n                )}\r\n            </Dropzone>\r\n\r\n            <div style={{ display: 'flex', width: '350px', height: '240px', overflowX: 'scroll' }}>\r\n\r\n                {Images.map((image, index) => (\r\n                    <div onClick={() => deleteHandler(image)} key={index}>\r\n                        <img style={{ minWidth: '300px', width: '300px', height: '240px' }}\r\n                            src={`http://localhost:5000/${image}`}\r\n                        />\r\n                    </div>\r\n                ))}\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpreadsFileUpload","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TSpreads\\SpreadsUpload.js",["200"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Upload.js",["201"],"import React, { useState } from 'react'\r\nimport { Typography, Button, Form, Input } from 'antd';\r\nimport FileUpload from './FileUpload';\r\nimport Axios from 'axios';\r\nconst { TextArea } = Input;\r\n\r\nconst Continents = [\r\n    { key: 1, value: \"Africa\" },\r\n    { key: 2, value: \"Europe\" },\r\n    { key: 3, value: \"Asia\" },\r\n    { key: 4, value: \"North America\" },\r\n    { key: 5, value: \"South America\" },\r\n    { key: 6, value: \"Australia\" },\r\n    { key: 7, value: \"Antarctica\" }\r\n]\r\n\r\nfunction Upload(props) {\r\n\r\n    const [Title, setTitle] = useState(\"\")\r\n    const [Description, setDescription] = useState(\"\")\r\n    const [Continent, setContinent] = useState(1)\r\n    const [Images, setImages] = useState([])\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const descriptionChangeHandler = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const continentChangeHandler = (event) => {\r\n        setContinent(event.currentTarget.value)\r\n    }\r\n\r\n    const updateImages = (newImages) => {\r\n        setImages(newImages)\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!Title || !Description || !Continent || Images.length === 0) {\r\n            return alert(\" 모든 값을 넣어주셔야 합니다.\")\r\n        }\r\n\r\n\r\n        //서버에 채운 값들을 request로 보낸다.\r\n\r\n        const body = {\r\n            //로그인 된 사람의 ID \r\n            writer: props.user.userData._id,\r\n            title: Title,\r\n            description: Description,\r\n            images: Images,\r\n            continents: Continent\r\n        }\r\n\r\n        Axios.post('/api/product', body)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('상품 업로드에 성공 했습니다.')\r\n                    props.history.push('/')\r\n                } else {\r\n                    alert('상품 업로드에 실패 했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <h2> 여행 상품 업로드</h2>\r\n            </div>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                {/* DropZone */}\r\n                <FileUpload refreshFunction={updateImages} />\r\n\r\n                <br />\r\n                <br />\r\n                <label>이름</label>\r\n                <Input onChange={titleChangeHandler} value={Title} />\r\n                <br />\r\n                <br />\r\n                <label>설명</label>\r\n                <TextArea onChange={descriptionChangeHandler} value={Description} />\r\n                <br />\r\n                <br />\r\n                <select onChange={continentChangeHandler} value={Continent}>\r\n                    {Continents.map(item => (\r\n                        <option key={item.key} value={item.key}> {item.value}</option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <Button type=\"submit\" onClick={submitHandler}>\r\n                    확인\r\n                </Button>\r\n            </Form>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upload",["202","203"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\TDirectory.js",["204","205"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\DetailProductPage.js",["206"],"import React,{useEffect,useState} from 'react'\r\nimport axios from 'axios';\r\nimport ProductTable from './ProductTable';\r\nimport ProductImage from './ProductImage';\r\nimport { Col, Row} from 'antd'\r\nfunction DetailProductPage(props) {\r\n    const productInfoId = props.match.params.productInfoId\r\n    const [Product, setProduct] = useState({})\r\n    useEffect(()=>{\r\n        axios.get(`/api/product/products_by_id?id=${productInfoId}&type=single`)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                    console.log('response.data',response.data)\r\n                    setProduct(response.data.productInfo[0])\r\n            }else {\r\n                alert('상세 정보 가져오기를 실패했습니다')\r\n            }\r\n        })\r\n    },[])\r\n    return (\r\n        <div style={{ width: '100%', padding: '3rem 4rem' }}>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <h1>{Product.title}</h1>\r\n            </div>\r\n\r\n            <br />\r\n            <Row gutter={[16, 16]} >\r\n                <Col lg={12} sm={24}>\r\n                    {/* ProductImage */}\r\n                    <ProductImage detail={Product} />\r\n                </Col>\r\n                <Col lg={12} sm={24}>\r\n                    {/* ProductInfo */}\r\n                    <ProductTable detail={Product} />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailProductPage\r\n",["207","208"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\FileUpload.js",["209"],"import React, { useState } from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport axios from 'axios';\r\n\r\n\r\nfunction FileUpload(props) {\r\n\r\n    const [Images, setImages] = useState([])\r\n\r\n    const dropHandler = (files) => {\r\n\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/fomr-data' }\r\n        }\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/product/image', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setImages([...Images, response.data.filePath])\r\n                    props.refreshFunction([...Images, response.data.filePath])\r\n\r\n\r\n                } else {\r\n                    alert('파일을 저장하는데 실패했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    const deleteHandler = (image) => {\r\n        const currentIndex = Images.indexOf(image);\r\n        let newImages = [...Images]\r\n        newImages.splice(currentIndex, 1)\r\n        setImages(newImages)\r\n        props.refreshFunction(newImages)\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Dropzone onDrop={dropHandler}>\r\n                {({ getRootProps, getInputProps }) => (\r\n                    <div\r\n                        style={{\r\n                            width: 300, height: 240, border: '1px solid lightgray',\r\n                            display: 'flex', alignItems: 'center', justifyContent: 'center'\r\n                        }}\r\n                        {...getRootProps()}>\r\n                        <input {...getInputProps()} />\r\n                        <p>이미지첨부</p>\r\n                    </div>\r\n                )}\r\n            </Dropzone>\r\n\r\n            <div style={{ display: 'flex', width: '350px', height: '240px', overflowX: 'scroll' }}>\r\n\r\n                {Images.map((image, index) => (\r\n                    <div onClick={() => deleteHandler(image)} key={index}>\r\n                        <img style={{ minWidth: '300px', width: '300px', height: '240px' }}\r\n                            src={`http://localhost:5000/${image}`}\r\n                        />\r\n                    </div>\r\n                ))}\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileUpload","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\ProductImage.js",["210"],"import React, { useEffect,useState } from 'react';\r\nimport ImageGallery from 'react-image-gallery';\r\n\r\nfunction ProductImage(props) {\r\n    const [Images, setImages] = useState([])\r\n    useEffect(() => {\r\n     if(props.detail.images && props.detail.images.length>0 ) {\r\n         let images = []\r\n         props.detail.images.map(item =>{\r\n             images.push({\r\n                 original:`http://localhost:5000/${item}`\r\n             })\r\n         })\r\n         setImages(images)\r\n     }\r\n    }, [props.detail])\r\n    return (\r\n        <div>\r\n            <ImageGallery items={Images}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductImage\r\n","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\ProductTable.js",["211","212","213"],"import React,{useState} from 'react'\r\nimport { Button,Descriptions} from 'antd';\r\nimport './ProductTable.css';\r\nfunction ProductTable(props) {\r\n\r\n    {/*const [Comment, setComment] = useState(\"\")\r\n\r\n    const CommentChangeHandler = (event) => {\r\n        setComment(event.currentTarget.value)\r\n    }*/}\r\n\r\n    return (\r\n        <div>\r\n        <Descriptions title=\"Product Info\">\r\n            <Descriptions.Item label=\"mal\">{props.detail.continent}</Descriptions.Item>\r\n            <Descriptions.Item label=\"title\">{props.detail.title}</Descriptions.Item>\r\n            <Descriptions.Item label=\"View\">{props.detail.views}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Description\">{props.detail.description}</Descriptions.Item>\r\n        </Descriptions>\r\n\r\n        <br />\r\n        <br />\r\n        <br />\r\n     \r\n\r\n    </div>\r\n \r\n    )\r\n}\r\n\r\nexport default ProductTable\r\n\r\n\r\n\r\n\r\n","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TarotBoard.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TBoardUpload.js",["214"],"import React, { useState } from 'react'\r\nimport { Typography, Button, Form, Input } from 'antd';\r\nimport FileUpload from './TboardFileUpload';\r\nimport Axios from 'axios';\r\nconst { TextArea } = Input;\r\n\r\nconst Continents = [\r\n    { key: 1, value: \"Africa\" },\r\n    { key: 2, value: \"Europe\" },\r\n    { key: 3, value: \"Asia\" },\r\n    { key: 4, value: \"North America\" },\r\n    { key: 5, value: \"South America\" },\r\n    { key: 6, value: \"Australia\" },\r\n    { key: 7, value: \"Antarctica\" }\r\n]\r\n\r\nfunction TBoardUpload(props) {\r\n\r\n    const [Title, setTitle] = useState(\"\")\r\n    const [Description, setDescription] = useState(\"\")\r\n    const [Continent, setContinent] = useState()\r\n    const [Images, setImages] = useState([])\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const descriptionChangeHandler = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const continentChangeHandler = (event) => {\r\n        setContinent(event.currentTarget.value)\r\n    }\r\n\r\n    const updateImages = (newImages) => {\r\n        setImages(newImages)\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!Title || !Description || !Continent || Images.length === 0) {\r\n            return alert(\" 모든 값을 넣어주셔야 합니다.\")\r\n        }\r\n\r\n        //서버에 채운 값들을 request로 보낸다.\r\n\r\n        const body = {\r\n            //로그인 된 사람의 ID \r\n            writer: props.user.userData._id,\r\n            title: Title,\r\n            description: Description,\r\n            images: Images,\r\n            continents: Continent\r\n        }\r\n\r\n        Axios.post('/api/tboard', body)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('업로드에 성공 했습니다.')\r\n                    props.history.push('/')\r\n                } else {\r\n                    alert('업로드에 실패 했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <h2>글쓰기</h2>\r\n            </div>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                {/* DropZone */}\r\n                <FileUpload refreshFunction={updateImages} />\r\n\r\n                <br />\r\n                <br />\r\n                <label>제목</label>\r\n                <Input onChange={titleChangeHandler} value={Title} />\r\n                <br />\r\n                <br />\r\n                <label>내용</label>\r\n                <TextArea onChange={descriptionChangeHandler} value={Description} />\r\n                <br />\r\n                <br />\r\n                <select onChange={continentChangeHandler} value={Continent}>\r\n                    {Continents.map(item => (\r\n                        <option key={item.key} value={item.key}> {item.value}</option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <Button type=\"submit\" onClick={submitHandler}>\r\n                    확인\r\n                </Button>\r\n            </Form>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TBoardUpload","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TboardFileUpload.js",["215"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\Update.js",["216","217","218"],"import React, { useState, useEffect } from \"react\";\r\nimport { Typography, Button, Form, Input } from \"antd\";\r\nimport FileUpload from \"../FileUpload\";\r\nimport Axios from \"axios\";\r\nconst { TextArea } = Input;\r\n\r\nconst Continents = [\r\n  { key: 1, value: \"Africa\" },\r\n  { key: 2, value: \"Europe\" },\r\n  { key: 3, value: \"Asia\" },\r\n  { key: 4, value: \"North America\" },\r\n  { key: 5, value: \"South America\" },\r\n  { key: 6, value: \"Australia\" },\r\n  { key: 7, value: \"Antarctica\" },\r\n];\r\n\r\nfunction Update(props) {\r\n  const productInfoId = props.match.params.productInfoId;\r\n  const [Product, setProduct] = useState({});\r\n  useEffect(() => {\r\n    Axios.get(\r\n      `/api/product/products_by_id?id=${productInfoId}&type=single`\r\n    ).then((response) => {\r\n      if (response.data.success) {\r\n        console.log(\"response.data\", response.data);\r\n        setProduct(response.data.productInfo[0]);\r\n      } else {\r\n        alert(\"상세 정보 가져오기를 실패했습니다\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const [Title, setTitle] = useState(\"\");\r\n  const [Description, setDescription] = useState(\"\");\r\n  const [Continent, setContinent] = useState(1);\r\n  const [Images, setImages] = useState([]);\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setTitle(event.currentTarget.value);\r\n  };\r\n\r\n  const descriptionChangeHandler = (event) => {\r\n    setDescription(event.currentTarget.value);\r\n  };\r\n\r\n  const continentChangeHandler = (event) => {\r\n    setContinent(event.currentTarget.value);\r\n  };\r\n\r\n  const updateImages = (newImages) => {\r\n    setImages(newImages);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!Title || !Description || !Continent || Images.length === 0) {\r\n      return alert(\" 모든 값을 넣어주셔야 합니다.\");\r\n    }\r\n\r\n    //서버에 채운 값들을 request로 보낸다.\r\n\r\n    const body = {\r\n      //로그인 된 사람의 ID\r\n      writer: props.user.userData._id,\r\n      title: Title,\r\n      description: Description,\r\n      images: Images,\r\n      continents: Continent,\r\n    };\r\n\r\n    Axios.post(\"/api/tboard/update\", body).then((response) => {\r\n      if (response.data.success) {\r\n        alert(\"상품 업로드에 성공 했습니다.\");\r\n        props.history.push(\"/\");\r\n      } else {\r\n        alert(\"상품 업로드에 실패 했습니다.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"700px\", margin: \"2rem auto\" }}>\r\n      <div style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\r\n        <h2>글쓰기</h2>\r\n      </div>\r\n\r\n      <Form onSubmit={submitHandler}>\r\n        {/* DropZone */}\r\n        <FileUpload refreshFunction={updateImages} />\r\n\r\n        <br />\r\n        <br />\r\n        <label>이름</label>\r\n        <Input onChange={titleChangeHandler} value={Title} />\r\n        <br />\r\n        <br />\r\n        <label>설명</label>\r\n        <TextArea onChange={descriptionChangeHandler} value={Description} />\r\n        <br />\r\n        <br />\r\n        <select onChange={continentChangeHandler} value={Continent}>\r\n          {Continents.map((item) => (\r\n            <option key={item.key} value={item.key}>\r\n              {\" \"}\r\n              {item.value}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br />\r\n        <br />\r\n        <Button type=\"submit\" onClick={submitHandler}>\r\n          확인\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Update;\r\n","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\Sections\\DetailTboardPage.js",["219"],"import React,{useEffect,useState} from 'react'\r\nimport axios from 'axios';\r\nimport TboardTable from './TboardTable';\r\nfunction DetailTboardPage(props) {\r\n    const tboardInfoId = props.match.params.tboardInfoId\r\n    const [Tboards, setTboards] = useState({})\r\n    useEffect(()=>{\r\n        axios.get(`/api/tboard/tboard_by_id?id=${tboardInfoId}&type=single`)\r\n        .then(response => {\r\n            if(response.data.success) {  \r\n                    console.log('response.data',response.data)\r\n                    setTboards(response.data.tboardInfo[0])\r\n            }else {\r\n                alert('상세 정보 가져오기를 실패했습니다')\r\n            }\r\n        })\r\n    },[])\r\n    return (\r\n        <form>\r\n            <div>\r\n                    <TboardTable detail={Tboards}/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default DetailTboardPage\r\n","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\Sections\\TboardTable.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\utils\\ImageSlider.js",["220","221","222","223","224","225","226"],"import React from 'react'\r\nimport { Icon, Col, Card, Row, Carousel } from 'antd';\r\nfunction ImageSlider(props) {\r\n    return (\r\n        <div>\r\n           <Carousel autoplay>\r\n    <div>\r\n      <h3><img className=\"banner-container\"src=\"https://i.imgur.com/uC95jbj.jpg\" title=\"tarot1.JPG\"/></h3>\r\n    </div>\r\n    <div>\r\n      <h3><img className=\"banner-container\"src=\"https://i.imgur.com/SOMbqAH.jpg\" title=\"viva-luna-studios-GLsAydqqgzs-unsplash.jpg\"/></h3>\r\n    </div>\r\n    <div>\r\n      <h3><img className=\"banner-container\" src=\"https://i.imgur.com/uuQCkaO.jpg\" title=\"dan-russo-adkrsIr_0iw-unsplash.jpg\"/></h3>\r\n    </div>\r\n  </Carousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageSlider","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\TdirecImageSlider.js",["227","228","229","230","231","232","233"],"import React from 'react'\r\nimport { Icon, Col, Card, Row, Carousel } from 'antd';\r\nfunction TdirecImageSlider(props) {\r\n    return (\r\n        <div>\r\n           <Carousel autoplay>\r\n    <div>\r\n      <h3><img className=\"banner-container\"src=\"https://i.imgur.com/uC95jbj.jpg\" title=\"tarot1.JPG\"/></h3>\r\n    </div>\r\n    <div>\r\n      <h3><img className=\"banner-container\"src=\"https://i.imgur.com/SOMbqAH.jpg\" title=\"viva-luna-studios-GLsAydqqgzs-unsplash.jpg\"/></h3>\r\n    </div>\r\n    <div>\r\n      <h3><img className=\"banner-container\" src=\"https://i.imgur.com/uuQCkaO.jpg\" title=\"dan-russo-adkrsIr_0iw-unsplash.jpg\"/></h3>\r\n    </div>\r\n  </Carousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TdirecImageSlider","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\ImageSlider.js",["234","235","236","237","238"],"import React from 'react'\r\nimport { Icon, Col, Card, Row, Carousel } from 'antd';\r\n\r\nfunction ImageSlider(props) {\r\n    return (\r\n        <div>\r\n            <Carousel autoplay >\r\n                {props.images.map((image, index) => (\r\n                    <div key={index}>\r\n                        <img style={{ width: '200%', maxHeight: '150px' }}\r\n                            src={`http://localhost:5000/${image}`} />\r\n                    </div>\r\n                ))}\r\n            </Carousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageSlider","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TSpreads\\Tspreads.js",["239"],"import React, { useEffect ,useState } from 'react'\r\nimport axios from \"axios\";\r\nimport Meta from 'antd/lib/card/Meta';\r\nimport { Col, Card, Row } from 'antd';\r\n\r\nfunction Tspreads(props) {\r\n    const [Spreads, setSpreads] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.post('/api/spreads/spreads')\r\n        .then(response => {\r\n            if (response.data.success) {\r\n     console.log(response.data)\r\n     setSpreads(response.data.spreadInfo)\r\n            } else {\r\n                alert(\"상품들을 가져오는데 실패했습니다.\")\r\n            }\r\n        })\r\n    },[])\r\nconst renderCards = Spreads.map((spreadInfo,index)=>{\r\n    console.log('spreadInfo',spreadInfo)\r\n    return <Col lg={6} md={8} xs={24} key={index}>\r\n    <Card\r\n    cover={<img src={`http://localhost:5000/${spreadInfo.images[0]}`} />}>\r\n        <Meta\r\n        title={spreadInfo.title}\r\n        description={spreadInfo.description}/>\r\n    </Card>\r\n    </Col>\r\n}) \r\n    return (\r\n        \r\n        <div style={{width:'75%', margin:'3rem auto'}}>\r\n            <div style={{textAlign: 'center'}}>\r\n                <h2>타로 백과사전</h2>\r\n            </div>\r\n<Row gutter={[16,16]}>\r\n{renderCards}\r\n</Row>\r\n       \r\n       \r\n\r\n        <div style={{ justifyContent :'center'}}>\r\n        <a href=\"/spreads/upload\">add</a>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tspreads\r\n","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TBoardUpdate.js",["240","241","242"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TBoardFileUpload.js",["243"],"import React, { useState } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport axios from \"axios\";\r\n\r\nfunction TBoardFileUpload(props) {\r\n  const [Images, setImages] = useState([]);\r\n\r\n  const dropHandler = (files) => {\r\n    let formData = new FormData();\r\n    const config = {\r\n      header: { \"content-type\": \"multipart/fomr-data\" },\r\n    };\r\n    formData.append(\"file\", files[0]);\r\n\r\n    axios.post(\"/api/tboard/image\", formData, config).then((response) => {\r\n      if (response.data.success) {\r\n        setImages([...Images, response.data.filePath]);\r\n        props.refreshFunction([...Images, response.data.filePath]);\r\n      } else {\r\n        alert(\"파일을 저장하는데 실패했습니다.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const deleteHandler = (image) => {\r\n    const currentIndex = Images.indexOf(image);\r\n    let newImages = [...Images];\r\n    newImages.splice(currentIndex, 1);\r\n    setImages(newImages);\r\n    props.refreshFunction(newImages);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n      <Dropzone onDrop={dropHandler}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div\r\n            style={{\r\n              width: 300,\r\n              height: 240,\r\n              border: \"1px solid lightgray\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n            {...getRootProps()}\r\n          >\r\n            <input {...getInputProps()} />\r\n            <p>이미지첨부</p>\r\n          </div>\r\n        )}\r\n      </Dropzone>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          width: \"350px\",\r\n          height: \"240px\",\r\n          overflowX: \"scroll\",\r\n        }}\r\n      >\r\n        {Images.map((image, index) => (\r\n          <div onClick={() => deleteHandler(image)} key={index}>\r\n            <img\r\n              style={{ minWidth: \"300px\", width: \"300px\", height: \"240px\" }}\r\n              src={`http://localhost:5000/${image}`}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TBoardFileUpload;\r\n","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\Sections\\CommentTable.js",["244","245","246"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\Navigation.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\home.js",[],{"ruleId":"247","severity":1,"message":"248","line":3,"column":8,"nodeType":"249","messageId":"250","endLine":3,"endColumn":13},{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"247","severity":1,"message":"248","line":4,"column":8,"nodeType":"249","messageId":"250","endLine":4,"endColumn":13},{"ruleId":"251","replacedBy":"255"},{"ruleId":"253","replacedBy":"256"},{"ruleId":"257","severity":1,"message":"258","line":7,"column":1,"nodeType":"259","endLine":21,"endColumn":2},{"ruleId":"260","severity":1,"message":"261","line":11,"column":13,"nodeType":"262","messageId":"263","endLine":11,"endColumn":19},{"ruleId":"260","severity":1,"message":"261","line":14,"column":13,"nodeType":"262","messageId":"263","endLine":14,"endColumn":19},{"ruleId":"260","severity":1,"message":"261","line":17,"column":17,"nodeType":"262","messageId":"263","endLine":17,"endColumn":23},{"ruleId":"251","replacedBy":"264"},{"ruleId":"253","replacedBy":"265"},{"ruleId":"257","severity":1,"message":"258","line":5,"column":1,"nodeType":"259","endLine":37,"endColumn":2},{"ruleId":"251","replacedBy":"266"},{"ruleId":"253","replacedBy":"267"},{"ruleId":"268","severity":1,"message":"269","line":22,"column":36,"nodeType":"270","endLine":22,"endColumn":62},{"ruleId":"268","severity":1,"message":"269","line":23,"column":36,"nodeType":"270","endLine":23,"endColumn":62},{"ruleId":"251","replacedBy":"271"},{"ruleId":"253","replacedBy":"272"},{"ruleId":"273","severity":1,"message":"274","line":63,"column":25,"nodeType":"270","endLine":65,"endColumn":27},{"ruleId":"247","severity":1,"message":"275","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":20},{"ruleId":"247","severity":1,"message":"275","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":20},{"ruleId":"251","replacedBy":"276"},{"ruleId":"253","replacedBy":"277"},{"ruleId":"247","severity":1,"message":"278","line":11,"column":17,"nodeType":"249","messageId":"250","endLine":11,"endColumn":25},{"ruleId":"279","severity":1,"message":"280","line":20,"column":6,"nodeType":"281","endLine":20,"endColumn":8,"suggestions":"282"},{"ruleId":"279","severity":1,"message":"283","line":19,"column":7,"nodeType":"281","endLine":19,"endColumn":9,"suggestions":"284"},{"ruleId":"251","replacedBy":"285"},{"ruleId":"253","replacedBy":"286"},{"ruleId":"273","severity":1,"message":"274","line":63,"column":25,"nodeType":"270","endLine":65,"endColumn":27},{"ruleId":"287","severity":1,"message":"288","line":9,"column":39,"nodeType":"289","messageId":"290","endLine":9,"endColumn":41},{"ruleId":"247","severity":1,"message":"291","line":1,"column":15,"nodeType":"249","messageId":"250","endLine":1,"endColumn":23},{"ruleId":"247","severity":1,"message":"292","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":16},{"ruleId":"293","severity":1,"message":"294","line":6,"column":5,"nodeType":"295","messageId":"296","endLine":10,"endColumn":9},{"ruleId":"247","severity":1,"message":"275","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":20},{"ruleId":"273","severity":1,"message":"274","line":63,"column":25,"nodeType":"270","endLine":65,"endColumn":27},{"ruleId":"247","severity":1,"message":"275","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":20},{"ruleId":"247","severity":1,"message":"297","line":19,"column":10,"nodeType":"249","messageId":"250","endLine":19,"endColumn":17},{"ruleId":"279","severity":1,"message":"283","line":31,"column":6,"nodeType":"281","endLine":31,"endColumn":8,"suggestions":"298"},{"ruleId":"279","severity":1,"message":"299","line":17,"column":7,"nodeType":"281","endLine":17,"endColumn":9,"suggestions":"300"},{"ruleId":"247","severity":1,"message":"301","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":14},{"ruleId":"247","severity":1,"message":"302","line":2,"column":16,"nodeType":"249","messageId":"250","endLine":2,"endColumn":19},{"ruleId":"247","severity":1,"message":"303","line":2,"column":21,"nodeType":"249","messageId":"250","endLine":2,"endColumn":25},{"ruleId":"247","severity":1,"message":"304","line":2,"column":27,"nodeType":"249","messageId":"250","endLine":2,"endColumn":30},{"ruleId":"273","severity":1,"message":"274","line":8,"column":11,"nodeType":"270","endLine":8,"endColumn":102},{"ruleId":"273","severity":1,"message":"274","line":11,"column":11,"nodeType":"270","endLine":11,"endColumn":134},{"ruleId":"273","severity":1,"message":"274","line":14,"column":11,"nodeType":"270","endLine":14,"endColumn":127},{"ruleId":"247","severity":1,"message":"301","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":14},{"ruleId":"247","severity":1,"message":"302","line":2,"column":16,"nodeType":"249","messageId":"250","endLine":2,"endColumn":19},{"ruleId":"247","severity":1,"message":"303","line":2,"column":21,"nodeType":"249","messageId":"250","endLine":2,"endColumn":25},{"ruleId":"247","severity":1,"message":"304","line":2,"column":27,"nodeType":"249","messageId":"250","endLine":2,"endColumn":30},{"ruleId":"273","severity":1,"message":"274","line":8,"column":11,"nodeType":"270","endLine":8,"endColumn":102},{"ruleId":"273","severity":1,"message":"274","line":11,"column":11,"nodeType":"270","endLine":11,"endColumn":134},{"ruleId":"273","severity":1,"message":"274","line":14,"column":11,"nodeType":"270","endLine":14,"endColumn":127},{"ruleId":"247","severity":1,"message":"301","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":14},{"ruleId":"247","severity":1,"message":"302","line":2,"column":16,"nodeType":"249","messageId":"250","endLine":2,"endColumn":19},{"ruleId":"247","severity":1,"message":"303","line":2,"column":21,"nodeType":"249","messageId":"250","endLine":2,"endColumn":25},{"ruleId":"247","severity":1,"message":"304","line":2,"column":27,"nodeType":"249","messageId":"250","endLine":2,"endColumn":30},{"ruleId":"273","severity":1,"message":"274","line":10,"column":25,"nodeType":"270","endLine":11,"endColumn":70},{"ruleId":"273","severity":1,"message":"274","line":24,"column":12,"nodeType":"270","endLine":24,"endColumn":73},{"ruleId":"247","severity":1,"message":"275","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":20},{"ruleId":"247","severity":1,"message":"305","line":19,"column":10,"nodeType":"249","messageId":"250","endLine":19,"endColumn":17},{"ruleId":"279","severity":1,"message":"299","line":36,"column":6,"nodeType":"281","endLine":36,"endColumn":8,"suggestions":"306"},{"ruleId":"273","severity":1,"message":"274","line":64,"column":13,"nodeType":"270","endLine":67,"endColumn":15},{"ruleId":"247","severity":1,"message":"292","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":16},{"ruleId":"247","severity":1,"message":"307","line":4,"column":19,"nodeType":"249","messageId":"250","endLine":4,"endColumn":26},{"ruleId":"247","severity":1,"message":"308","line":4,"column":28,"nodeType":"249","messageId":"250","endLine":4,"endColumn":34},"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","no-native-reassign",["309"],"no-negated-in-lhs",["310"],["309"],["310"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["309"],["310"],["309"],["310"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["309"],["310"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Typography' is defined but never used.",["309"],["310"],"'setLimit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Limit', 'Skip', and 'getProducts'. Either include them or remove the dependency array.","ArrayExpression",["311"],"React Hook useEffect has a missing dependency: 'productInfoId'. Either include it or remove the dependency array.",["312"],["309"],["310"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'Button' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Product' is assigned a value but never used.",["313"],"React Hook useEffect has a missing dependency: 'tboardInfoId'. Either include it or remove the dependency array.",["314"],"'Icon' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'Row' is defined but never used.","'Tboards' is assigned a value but never used.",["315"],"'Tooltip' is defined but never used.","'Avatar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"318","fix":"320"},{"desc":"321","fix":"322"},{"desc":"321","fix":"323"},"Update the dependencies array to be: [Limit, Skip, getProducts]",{"range":"324","text":"325"},"Update the dependencies array to be: [productInfoId]",{"range":"326","text":"327"},{"range":"328","text":"327"},"Update the dependencies array to be: [tboardInfoId]",{"range":"329","text":"330"},{"range":"331","text":"330"},[642,644],"[Limit, Skip, getProducts]",[739,741],"[productInfoId]",[965,967],[655,657],"[tboardInfoId]",[1162,1164]]