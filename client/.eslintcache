[{"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\App.js":"1","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"2","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"3","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"4","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\reportWebVitals.js":"5","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\index.js":"6","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_reducers\\index.js":"7","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_actions\\types.js":"8","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_actions\\user_action.js":"9","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_reducers\\user_reducer.js":"10","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\hoc\\auth.js":"11","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\NavBar\\NavBar.js":"12","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\NavBar\\Selection\\RightMenu.js":"13","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\NavBar\\Selection\\LeftMenu.js":"14","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\config.js":"15","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TSpreads\\SpreadsFileUpload.js":"16","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TSpreads\\SpreadsUpload.js":"17","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Upload.js":"18","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\TDirectory.js":"19","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\DetailProductPage.js":"20","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\FileUpload.js":"21","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\ProductImage.js":"22","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\ProductTable.js":"23","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TarotBoard.js":"24","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TBoardUpload.js":"25","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TboardFileUpload.js":"26","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\Update.js":"27","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\Sections\\DetailTboardPage.js":"28","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\Sections\\TboardTable.js":"29","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\utils\\ImageSlider.js":"30","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\TdirecImageSlider.js":"31","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\ImageSlider.js":"32","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TSpreads\\Tspreads.js":"33"},{"size":2805,"mtime":1611127194473,"results":"34","hashOfConfig":"35"},{"size":1675,"mtime":1610952159401,"results":"36","hashOfConfig":"35"},{"size":1852,"mtime":1610364536657,"results":"37","hashOfConfig":"35"},{"size":2694,"mtime":1610359642845,"results":"38","hashOfConfig":"35"},{"size":362,"mtime":1606625502126,"results":"39","hashOfConfig":"35"},{"size":987,"mtime":1610273097657,"results":"40","hashOfConfig":"35"},{"size":162,"mtime":1610280077801,"results":"41","hashOfConfig":"35"},{"size":125,"mtime":1610282943572,"results":"42","hashOfConfig":"35"},{"size":784,"mtime":1610283025516,"results":"43","hashOfConfig":"35"},{"size":555,"mtime":1610283075294,"results":"44","hashOfConfig":"35"},{"size":1192,"mtime":1610523703374,"results":"45","hashOfConfig":"35"},{"size":1400,"mtime":1610530277005,"results":"46","hashOfConfig":"35"},{"size":1136,"mtime":1610363677516,"results":"47","hashOfConfig":"35"},{"size":1901,"mtime":1610367128841,"results":"48","hashOfConfig":"35"},{"size":57,"mtime":1610350538393,"results":"49","hashOfConfig":"35"},{"size":2360,"mtime":1610542995983,"results":"50","hashOfConfig":"35"},{"size":3317,"mtime":1610593263233,"results":"51","hashOfConfig":"35"},{"size":3296,"mtime":1610621184982,"results":"52","hashOfConfig":"35"},{"size":2409,"mtime":1611127265282,"results":"53","hashOfConfig":"35"},{"size":1449,"mtime":1610959838009,"results":"54","hashOfConfig":"35"},{"size":2346,"mtime":1610600773868,"results":"55","hashOfConfig":"35"},{"size":645,"mtime":1610609475961,"results":"56","hashOfConfig":"35"},{"size":888,"mtime":1610959777566,"results":"57","hashOfConfig":"35"},{"size":1671,"mtime":1610949145963,"results":"58","hashOfConfig":"35"},{"size":3281,"mtime":1610688355380,"results":"59","hashOfConfig":"35"},{"size":2357,"mtime":1610621136644,"results":"60","hashOfConfig":"35"},{"size":3850,"mtime":1610879042433,"results":"61","hashOfConfig":"35"},{"size":874,"mtime":1610885943846,"results":"62","hashOfConfig":"35"},{"size":1630,"mtime":1611129214417,"results":"63","hashOfConfig":"35"},{"size":694,"mtime":1610948263180,"results":"64","hashOfConfig":"35"},{"size":706,"mtime":1610958678799,"results":"65","hashOfConfig":"35"},{"size":548,"mtime":1610958665649,"results":"66","hashOfConfig":"35"},{"size":1378,"mtime":1610542798333,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nhshyc",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"79"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"79"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"79"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"79"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"79"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"79"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\App.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\LandingPage\\LandingPage.js",[],["151","152"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\LoginPage\\LoginPage.js",["153"],"  \r\nimport React, { useState } from 'react'\r\nimport Axios from 'axios'\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginUser } from '../../../_actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './css/LoginPage.css'\r\nfunction LoginPage(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [Email, setEmail] = useState(\"\")\r\n    const [Password, setPassword] = useState(\"\")\r\n\r\n    const onEmailHandler = (event) => {\r\n        setEmail(event.currentTarget.value)\r\n    }\r\n\r\n    const onPasswordHandler = (event) => {\r\n        setPassword(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        let body = {\r\n            email: Email,\r\n            password: Password\r\n        }\r\n\r\n        dispatch(loginUser(body))\r\n            .then(response => {\r\n                if (response.payload.loginSuccess) {\r\n                    props.history.push('/')\r\n                } else {\r\n                    alert('Error˝')\r\n                }\r\n            })\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"login-box\">\r\n            <h2>Login</h2>\r\n            <form onSubmit={onSubmitHandler}\r\n            >    \r\n                <div className=\"user-box\">\r\n                <label>Email</label>\r\n                <input type=\"email\" value={Email} onChange={onEmailHandler} required=\"\" />\r\n                </div>\r\n                <div className=\"user-box\">\r\n                <label>Password</label>\r\n                <input type=\"password\" value={Password} onChange={onPasswordHandler} required=\"\" />\r\n                </div>\r\n                <button type=\"Submit\">\r\n                 Login\r\n                </button>\r\n                <a href=\"/register\">register now!</a>\r\n               </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage)","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["154"],"import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { registerUser } from '../../../_actions/user_action';\r\nimport Axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Register.css';\r\nfunction RegisterPage(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [Email, setEmail] = useState(\"\")\r\n    const [Name, setName] = useState(\"\")\r\n    const [Password, setPassword] = useState(\"\")\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n\r\n    const onEmailHandler = (event) => {\r\n        setEmail(event.currentTarget.value)\r\n    }\r\n\r\n    const onNameHandler = (event) => {\r\n        setName(event.currentTarget.value)\r\n    }\r\n\r\n    const onPasswordHandler = (event) => {\r\n        setPassword(event.currentTarget.value)\r\n    }\r\n\r\n    const onConfirmPasswordHandler = (event) => {\r\n        setConfirmPassword(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (Password !== ConfirmPassword) {\r\n            return alert('비밀번호와 비밀번호 확인은 같아야 합니다.')\r\n        }\r\n\r\n        let body = {\r\n            email: Email,\r\n            password: Password,\r\n            name: Name\r\n        }\r\n        dispatch(registerUser(body))\r\n            .then(response => {\r\n                if (response.payload.success) {\r\n                    props.history.push(\"/login\")\r\n                } else {\r\n                    alert(\"Failed to sign up\")\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"register-box\">\r\n            <h2>Register</h2>\r\n            <form onSubmit={onSubmitHandler}\r\n            >   \r\n            <div className=\"user-box\">\r\n                <label>Email</label>\r\n                <input type=\"email\" value={Email} onChange={onEmailHandler} />\r\n               </div>\r\n               <div className=\"user-box\">\r\n                <label>Name</label>\r\n                <input type=\"text\" value={Name} onChange={onNameHandler} />\r\n              </div>\r\n              <div className=\"user-box\">\r\n                <label>Password</label>\r\n                <input type=\"password\" value={Password} onChange={onPasswordHandler} />\r\n                </div>\r\n                <div className=\"user-box\">\r\n                <label>Confirm Password</label>\r\n                <input type=\"password\" value={ConfirmPassword} onChange={onConfirmPasswordHandler} />\r\n                </div>\r\n                <br />\r\n                <button type=\"submit\">\r\n                   Sign up\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(RegisterPage)",["155","156"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\reportWebVitals.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\index.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_reducers\\index.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_actions\\types.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_actions\\user_action.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_reducers\\user_reducer.js",["157","158","159","160"],"import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER\r\n} from '../_actions/types';\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loginSuccess: action.payload }\r\n            break;\r\n        case REGISTER_USER:\r\n            return { ...state, register: action.payload }\r\n            break;\r\n            case AUTH_USER:\r\n                return { ...state, userData: action.payload }\r\n                break;\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\hoc\\auth.js",["161"],"import React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_action';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (ComposedClass, reload, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n\r\n            dispatch(auth()).then(async response => {\r\n                if (await !response.payload.isAuth) {\r\n                    if (reload) {\r\n                        props.history.push('/login')\r\n                    }\r\n                } else {\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    else {\r\n                        if (reload === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            \r\n        }, [dispatch, props.history, user.googleAuth])\r\n\r\n        return (\r\n            <ComposedClass {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\NavBar\\NavBar.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\NavBar\\Selection\\RightMenu.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\NavBar\\Selection\\LeftMenu.js",["162","163"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\config.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TSpreads\\SpreadsFileUpload.js",["164"],"import React, { useState } from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport axios from 'axios';\r\n\r\n\r\nfunction SpreadsFileUpload(props) {\r\n\r\n    const [Images, setImages] = useState([])\r\n\r\n    const dropHandler = (files) => {\r\n\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/fomr-data' }\r\n        }\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/spreads/tarot', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setImages([...Images, response.data.filePath])\r\n                    props.refreshFunction([...Images, response.data.filePath])\r\n\r\n\r\n                } else {\r\n                    alert('파일을 저장하는데 실패했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    const deleteHandler = (image) => {\r\n        const currentIndex = Images.indexOf(image);\r\n        let newImages = [...Images]\r\n        newImages.splice(currentIndex, 1)\r\n        setImages(newImages)\r\n        props.refreshFunction(newImages)\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Dropzone onDrop={dropHandler}>\r\n                {({ getRootProps, getInputProps }) => (\r\n                    <div\r\n                        style={{\r\n                            width: 300, height: 240, border: '1px solid lightgray',\r\n                            display: 'flex', alignItems: 'center', justifyContent: 'center'\r\n                        }}\r\n                        {...getRootProps()}>\r\n                        <input {...getInputProps()} />\r\n                        <p>이미지첨부</p>\r\n                    </div>\r\n                )}\r\n            </Dropzone>\r\n\r\n            <div style={{ display: 'flex', width: '350px', height: '240px', overflowX: 'scroll' }}>\r\n\r\n                {Images.map((image, index) => (\r\n                    <div onClick={() => deleteHandler(image)} key={index}>\r\n                        <img style={{ minWidth: '300px', width: '300px', height: '240px' }}\r\n                            src={`http://localhost:5000/${image}`}\r\n                        />\r\n                    </div>\r\n                ))}\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpreadsFileUpload","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TSpreads\\SpreadsUpload.js",["165"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Upload.js",["166"],"import React, { useState } from 'react'\r\nimport { Typography, Button, Form, Input } from 'antd';\r\nimport FileUpload from './FileUpload';\r\nimport Axios from 'axios';\r\nconst { TextArea } = Input;\r\n\r\nconst Continents = [\r\n    { key: 1, value: \"Africa\" },\r\n    { key: 2, value: \"Europe\" },\r\n    { key: 3, value: \"Asia\" },\r\n    { key: 4, value: \"North America\" },\r\n    { key: 5, value: \"South America\" },\r\n    { key: 6, value: \"Australia\" },\r\n    { key: 7, value: \"Antarctica\" }\r\n]\r\n\r\nfunction Upload(props) {\r\n\r\n    const [Title, setTitle] = useState(\"\")\r\n    const [Description, setDescription] = useState(\"\")\r\n    const [Continent, setContinent] = useState(1)\r\n    const [Images, setImages] = useState([])\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const descriptionChangeHandler = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const continentChangeHandler = (event) => {\r\n        setContinent(event.currentTarget.value)\r\n    }\r\n\r\n    const updateImages = (newImages) => {\r\n        setImages(newImages)\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!Title || !Description || !Continent || Images.length === 0) {\r\n            return alert(\" 모든 값을 넣어주셔야 합니다.\")\r\n        }\r\n\r\n\r\n        //서버에 채운 값들을 request로 보낸다.\r\n\r\n        const body = {\r\n            //로그인 된 사람의 ID \r\n            writer: props.user.userData._id,\r\n            title: Title,\r\n            description: Description,\r\n            images: Images,\r\n            continents: Continent\r\n        }\r\n\r\n        Axios.post('/api/product', body)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('상품 업로드에 성공 했습니다.')\r\n                    props.history.push('/')\r\n                } else {\r\n                    alert('상품 업로드에 실패 했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <h2> 여행 상품 업로드</h2>\r\n            </div>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                {/* DropZone */}\r\n                <FileUpload refreshFunction={updateImages} />\r\n\r\n                <br />\r\n                <br />\r\n                <label>이름</label>\r\n                <Input onChange={titleChangeHandler} value={Title} />\r\n                <br />\r\n                <br />\r\n                <label>설명</label>\r\n                <TextArea onChange={descriptionChangeHandler} value={Description} />\r\n                <br />\r\n                <br />\r\n                <select onChange={continentChangeHandler} value={Continent}>\r\n                    {Continents.map(item => (\r\n                        <option key={item.key} value={item.key}> {item.value}</option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <Button type=\"submit\" onClick={submitHandler}>\r\n                    확인\r\n                </Button>\r\n            </Form>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upload","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\TDirectory.js",["167","168"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Meta from \"antd/lib/card/Meta\";\r\nimport { Col, Card, Row } from \"antd\";\r\nimport ImageSlider from \"./ImageSlider\";\r\nimport TdirecImageSlider from \"./Sections/TdirecImageSlider\";\r\nfunction TDirectory(props) {\r\n  const [Products, setProducts] = useState([]);\r\n  const [Skip, setSkip] = useState(0);\r\n  const [Limit, setLimit] = useState(8);\r\n  const [PostSize, setPostSize] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let body = {\r\n      skip: Skip,\r\n      limit: Limit,\r\n    };\r\n    getProducts(body);\r\n  }, []);\r\n  const getProducts = (body) => {\r\n    axios.post(\"/api/product/products\", body).then((response) => {\r\n      if (response.data.success) {\r\n        if (body.loadMore) {\r\n          setProducts([...Products, ...response.data.productInfo]);\r\n        }\r\n        setPostSize(response.data.postSize);\r\n        setProducts(response.data.productInfo);\r\n      } else {\r\n        alert(\"상품들을 가져오는데 실패했습니다.\");\r\n      }\r\n    });\r\n  };\r\n  const loadMoreHandler = () => {\r\n    let skip = Skip + Limit;\r\n    //0 + 8\r\n    // 8 + 8\r\n    let body = {\r\n      skip: Skip,\r\n      limit: Limit,\r\n      loadMore: true,\r\n    };\r\n\r\n    getProducts(body);\r\n    setSkip(skip);\r\n  };\r\n  const renderCards = Products.map((productInfo, index) => {\r\n    console.log(\"productInfo\", productInfo);\r\n    return (\r\n      <Col lg={6} md={8} xs={24} key={index}>\r\n        <Card\r\n          cover={\r\n            <a href={`/product/${productInfo._id}`}>\r\n              <ImageSlider images={productInfo.images} />\r\n            </a>\r\n          }\r\n        >\r\n          <Meta\r\n            title={productInfo.title}\r\n            description={productInfo.description}\r\n          />\r\n        </Card>\r\n      </Col>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div style={{ width: \"75%\", margin: \"3rem auto\" }}>\r\n      <TdirecImageSlider />\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <h2>타로 백과사전</h2>\r\n      </div>\r\n      <Row gutter={[16, 16]}>{renderCards}</Row>\r\n      {PostSize >= Limit && (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}></div>\r\n      )}\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <a href=\"/product/upload\">add</a>\r\n        <button onClick={loadMoreHandler}>더보기</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TDirectory;\r\n","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\DetailProductPage.js",["169"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\FileUpload.js",["170"],"import React, { useState } from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport axios from 'axios';\r\n\r\n\r\nfunction FileUpload(props) {\r\n\r\n    const [Images, setImages] = useState([])\r\n\r\n    const dropHandler = (files) => {\r\n\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/fomr-data' }\r\n        }\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/product/image', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setImages([...Images, response.data.filePath])\r\n                    props.refreshFunction([...Images, response.data.filePath])\r\n\r\n\r\n                } else {\r\n                    alert('파일을 저장하는데 실패했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    const deleteHandler = (image) => {\r\n        const currentIndex = Images.indexOf(image);\r\n        let newImages = [...Images]\r\n        newImages.splice(currentIndex, 1)\r\n        setImages(newImages)\r\n        props.refreshFunction(newImages)\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Dropzone onDrop={dropHandler}>\r\n                {({ getRootProps, getInputProps }) => (\r\n                    <div\r\n                        style={{\r\n                            width: 300, height: 240, border: '1px solid lightgray',\r\n                            display: 'flex', alignItems: 'center', justifyContent: 'center'\r\n                        }}\r\n                        {...getRootProps()}>\r\n                        <input {...getInputProps()} />\r\n                        <p>이미지첨부</p>\r\n                    </div>\r\n                )}\r\n            </Dropzone>\r\n\r\n            <div style={{ display: 'flex', width: '350px', height: '240px', overflowX: 'scroll' }}>\r\n\r\n                {Images.map((image, index) => (\r\n                    <div onClick={() => deleteHandler(image)} key={index}>\r\n                        <img style={{ minWidth: '300px', width: '300px', height: '240px' }}\r\n                            src={`http://localhost:5000/${image}`}\r\n                        />\r\n                    </div>\r\n                ))}\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileUpload","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\ProductImage.js",["171"],"import React, { useEffect,useState } from 'react';\r\nimport ImageGallery from 'react-image-gallery';\r\n\r\nfunction ProductImage(props) {\r\n    const [Images, setImages] = useState([])\r\n    useEffect(() => {\r\n     if(props.detail.images && props.detail.images.length>0 ) {\r\n         let images = []\r\n         props.detail.images.map(item =>{\r\n             images.push({\r\n                 original:`http://localhost:5000/${item}`\r\n             })\r\n         })\r\n         setImages(images)\r\n     }\r\n    }, [props.detail])\r\n    return (\r\n        <div>\r\n            <ImageGallery items={Images}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductImage\r\n","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\ProductTable.js",["172","173","174"],"import React,{useState} from 'react'\r\nimport { Button,Descriptions} from 'antd';\r\nimport './ProductTable.css';\r\nfunction ProductTable(props) {\r\n\r\n    {/*const [Comment, setComment] = useState(\"\")\r\n\r\n    const CommentChangeHandler = (event) => {\r\n        setComment(event.currentTarget.value)\r\n    }*/}\r\n\r\n    return (\r\n        <div>\r\n        <Descriptions title=\"Product Info\">\r\n            <Descriptions.Item label=\"mal\">{props.detail.continent}</Descriptions.Item>\r\n            <Descriptions.Item label=\"title\">{props.detail.title}</Descriptions.Item>\r\n            <Descriptions.Item label=\"View\">{props.detail.views}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Description\">{props.detail.description}</Descriptions.Item>\r\n        </Descriptions>\r\n\r\n        <br />\r\n        <br />\r\n        <br />\r\n     \r\n\r\n    </div>\r\n \r\n    )\r\n}\r\n\r\nexport default ProductTable\r\n\r\n\r\n\r\n\r\n","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TarotBoard.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TBoardUpload.js",["175"],"import React, { useState } from 'react'\r\nimport { Typography, Button, Form, Input } from 'antd';\r\nimport FileUpload from './TboardFileUpload';\r\nimport Axios from 'axios';\r\nconst { TextArea } = Input;\r\n\r\nconst Continents = [\r\n    { key: 1, value: \"Africa\" },\r\n    { key: 2, value: \"Europe\" },\r\n    { key: 3, value: \"Asia\" },\r\n    { key: 4, value: \"North America\" },\r\n    { key: 5, value: \"South America\" },\r\n    { key: 6, value: \"Australia\" },\r\n    { key: 7, value: \"Antarctica\" }\r\n]\r\n\r\nfunction TBoardUpload(props) {\r\n\r\n    const [Title, setTitle] = useState(\"\")\r\n    const [Description, setDescription] = useState(\"\")\r\n    const [Continent, setContinent] = useState()\r\n    const [Images, setImages] = useState([])\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const descriptionChangeHandler = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const continentChangeHandler = (event) => {\r\n        setContinent(event.currentTarget.value)\r\n    }\r\n\r\n    const updateImages = (newImages) => {\r\n        setImages(newImages)\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!Title || !Description || !Continent || Images.length === 0) {\r\n            return alert(\" 모든 값을 넣어주셔야 합니다.\")\r\n        }\r\n\r\n        //서버에 채운 값들을 request로 보낸다.\r\n\r\n        const body = {\r\n            //로그인 된 사람의 ID \r\n            writer: props.user.userData._id,\r\n            title: Title,\r\n            description: Description,\r\n            images: Images,\r\n            continents: Continent\r\n        }\r\n\r\n        Axios.post('/api/tboard', body)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('업로드에 성공 했습니다.')\r\n                    props.history.push('/')\r\n                } else {\r\n                    alert('업로드에 실패 했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <h2>글쓰기</h2>\r\n            </div>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                {/* DropZone */}\r\n                <FileUpload refreshFunction={updateImages} />\r\n\r\n                <br />\r\n                <br />\r\n                <label>제목</label>\r\n                <Input onChange={titleChangeHandler} value={Title} />\r\n                <br />\r\n                <br />\r\n                <label>내용</label>\r\n                <TextArea onChange={descriptionChangeHandler} value={Description} />\r\n                <br />\r\n                <br />\r\n                <select onChange={continentChangeHandler} value={Continent}>\r\n                    {Continents.map(item => (\r\n                        <option key={item.key} value={item.key}> {item.value}</option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <Button type=\"submit\" onClick={submitHandler}>\r\n                    확인\r\n                </Button>\r\n            </Form>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TBoardUpload","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TboardFileUpload.js",["176"],"import React, { useState } from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport axios from 'axios';\r\n\r\n\r\nfunction TboardFileUpload(props) {\r\n\r\n    const [Images, setImages] = useState([])\r\n\r\n    const dropHandler = (files) => {\r\n\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/fomr-data' }\r\n        }\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/tboard/image', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setImages([...Images, response.data.filePath])\r\n                    props.refreshFunction([...Images, response.data.filePath])\r\n\r\n\r\n                } else {\r\n                    alert('파일을 저장하는데 실패했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    const deleteHandler = (image) => {\r\n        const currentIndex = Images.indexOf(image);\r\n        let newImages = [...Images]\r\n        newImages.splice(currentIndex, 1)\r\n        setImages(newImages)\r\n        props.refreshFunction(newImages)\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Dropzone onDrop={dropHandler}>\r\n                {({ getRootProps, getInputProps }) => (\r\n                    <div\r\n                        style={{\r\n                            width: 300, height: 240, border: '1px solid lightgray',\r\n                            display: 'flex', alignItems: 'center', justifyContent: 'center'\r\n                        }}\r\n                        {...getRootProps()}>\r\n                        <input {...getInputProps()} />\r\n                        <p>이미지첨부</p>\r\n                    </div>\r\n                )}\r\n            </Dropzone>\r\n\r\n            <div style={{ display: 'flex', width: '350px', height: '240px', overflowX: 'scroll' }}>\r\n\r\n                {Images.map((image, index) => (\r\n                    <div onClick={() => deleteHandler(image)} key={index}>\r\n                        <img style={{ minWidth: '300px', width: '300px', height: '240px' }}\r\n                            src={`http://localhost:5000/${image}`}\r\n                        />\r\n                    </div>\r\n                ))}\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TboardFileUpload","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\Update.js",["177","178","179"],"import React, { useState ,useEffect} from 'react'\r\nimport { Typography, Button, Form, Input } from 'antd';\r\nimport FileUpload from '../FileUpload';\r\nimport Axios from 'axios';\r\nconst { TextArea } = Input;\r\n\r\nconst Continents = [\r\n    { key: 1, value: \"Africa\" },\r\n    { key: 2, value: \"Europe\" },\r\n    { key: 3, value: \"Asia\" },\r\n    { key: 4, value: \"North America\" },\r\n    { key: 5, value: \"South America\" },\r\n    { key: 6, value: \"Australia\" },\r\n    { key: 7, value: \"Antarctica\" }\r\n]\r\n\r\nfunction Update(props) {\r\n    const productInfoId = props.match.params.productInfoId\r\n    const [Product, setProduct] = useState({})\r\n    useEffect(()=>{\r\n        Axios.get(`/api/product/products_by_id?id=${productInfoId}&type=single`)\r\n        .then(response => {\r\n            if(response.data.success) {\r\n                    console.log('response.data',response.data)\r\n                    setProduct(response.data.productInfo[0])\r\n            }else {\r\n                alert('상세 정보 가져오기를 실패했습니다')\r\n            }\r\n        })\r\n    },[])\r\n\r\n    const [Title, setTitle] = useState(\"\")\r\n    const [Description, setDescription] = useState(\"\")\r\n    const [Continent, setContinent] = useState(1)\r\n    const [Images, setImages] = useState([])\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const descriptionChangeHandler = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const continentChangeHandler = (event) => {\r\n        setContinent(event.currentTarget.value)\r\n    }\r\n\r\n    const updateImages = (newImages) => {\r\n        setImages(newImages)\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!Title || !Description || !Continent || Images.length === 0) {\r\n            return alert(\" 모든 값을 넣어주셔야 합니다.\")\r\n        }\r\n\r\n\r\n        //서버에 채운 값들을 request로 보낸다.\r\n\r\n        const body = {\r\n            //로그인 된 사람의 ID \r\n            writer: props.user.userData._id,\r\n            title: Title,\r\n            description: Description,\r\n            images: Images,\r\n            continents: Continent\r\n        }\r\n\r\n        Axios.post('/api/product/update', body)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('상품 업로드에 성공 했습니다.')\r\n                    props.history.push('/')\r\n                } else {\r\n                    alert('상품 업로드에 실패 했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        \r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <h2>글쓰기</h2>\r\n            </div>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                {/* DropZone */}\r\n                <FileUpload refreshFunction={updateImages} />\r\n\r\n                <br />\r\n                <br />\r\n                <label>이름</label>\r\n                <Input onChange={titleChangeHandler} value={Title} />\r\n                <br />\r\n                <br />\r\n                <label>설명</label>\r\n                <TextArea onChange={descriptionChangeHandler} value={Description} />\r\n                <br />\r\n                <br />\r\n                <select onChange={continentChangeHandler} value={Continent}>\r\n                    {Continents.map(item => (\r\n                        <option key={item.key} value={item.key}> {item.value}</option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <Button type=\"submit\" onClick={submitHandler}>\r\n                    확인\r\n                </Button>\r\n            </Form>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Update","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\Sections\\DetailTboardPage.js",["180"],"import React,{useEffect,useState} from 'react'\r\nimport axios from 'axios';\r\nimport TboardTable from './TboardTable';\r\nfunction DetailTboardPage(props) {\r\n    const tboardInfoId = props.match.params.tboardInfoId\r\n    const [Tboards, setTboards] = useState({})\r\n    useEffect(()=>{\r\n        axios.get(`/api/tboard/tboard_by_id?id=${tboardInfoId}&type=single`)\r\n        .then(response => {\r\n            if(response.data.success) {  \r\n                    console.log('response.data',response.data)\r\n                    setTboards(response.data.tboardInfo[0])\r\n            }else {\r\n                alert('상세 정보 가져오기를 실패했습니다')\r\n            }\r\n        })\r\n    },[])\r\n    return (\r\n        <form>\r\n            <div>\r\n                    <TboardTable detail={Tboards}/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default DetailTboardPage\r\n","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\Sections\\TboardTable.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\utils\\ImageSlider.js",["181","182","183","184","185","186","187"],"import React from 'react'\r\nimport { Icon, Col, Card, Row, Carousel } from 'antd';\r\nfunction ImageSlider(props) {\r\n    return (\r\n        <div>\r\n           <Carousel autoplay>\r\n    <div>\r\n      <h3><img className=\"banner-container\"src=\"https://i.imgur.com/uC95jbj.jpg\" title=\"tarot1.JPG\"/></h3>\r\n    </div>\r\n    <div>\r\n      <h3><img className=\"banner-container\"src=\"https://i.imgur.com/SOMbqAH.jpg\" title=\"viva-luna-studios-GLsAydqqgzs-unsplash.jpg\"/></h3>\r\n    </div>\r\n    <div>\r\n      <h3><img className=\"banner-container\" src=\"https://i.imgur.com/uuQCkaO.jpg\" title=\"dan-russo-adkrsIr_0iw-unsplash.jpg\"/></h3>\r\n    </div>\r\n  </Carousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageSlider","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\TdirecImageSlider.js",["188","189","190","191","192","193","194"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\ImageSlider.js",["195","196","197","198","199"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TSpreads\\Tspreads.js",["200"],{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":3,"column":8,"nodeType":"207","messageId":"208","endLine":3,"endColumn":13},{"ruleId":"205","severity":1,"message":"206","line":4,"column":8,"nodeType":"207","messageId":"208","endLine":4,"endColumn":13},{"ruleId":"201","replacedBy":"209"},{"ruleId":"203","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":7,"column":1,"nodeType":"213","endLine":21,"endColumn":2},{"ruleId":"214","severity":1,"message":"215","line":11,"column":13,"nodeType":"216","messageId":"217","endLine":11,"endColumn":19},{"ruleId":"214","severity":1,"message":"215","line":14,"column":13,"nodeType":"216","messageId":"217","endLine":14,"endColumn":19},{"ruleId":"214","severity":1,"message":"215","line":17,"column":17,"nodeType":"216","messageId":"217","endLine":17,"endColumn":23},{"ruleId":"211","severity":1,"message":"212","line":5,"column":1,"nodeType":"213","endLine":37,"endColumn":2},{"ruleId":"218","severity":1,"message":"219","line":22,"column":36,"nodeType":"220","endLine":22,"endColumn":62},{"ruleId":"218","severity":1,"message":"219","line":23,"column":36,"nodeType":"220","endLine":23,"endColumn":62},{"ruleId":"221","severity":1,"message":"222","line":63,"column":25,"nodeType":"220","endLine":65,"endColumn":27},{"ruleId":"205","severity":1,"message":"223","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":20},{"ruleId":"205","severity":1,"message":"223","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":20},{"ruleId":"205","severity":1,"message":"224","line":10,"column":17,"nodeType":"207","messageId":"208","endLine":10,"endColumn":25},{"ruleId":"225","severity":1,"message":"226","line":19,"column":6,"nodeType":"227","endLine":19,"endColumn":8,"suggestions":"228"},{"ruleId":"225","severity":1,"message":"229","line":19,"column":7,"nodeType":"227","endLine":19,"endColumn":9,"suggestions":"230"},{"ruleId":"221","severity":1,"message":"222","line":63,"column":25,"nodeType":"220","endLine":65,"endColumn":27},{"ruleId":"231","severity":1,"message":"232","line":9,"column":39,"nodeType":"233","messageId":"234","endLine":9,"endColumn":41},{"ruleId":"205","severity":1,"message":"235","line":1,"column":15,"nodeType":"207","messageId":"208","endLine":1,"endColumn":23},{"ruleId":"205","severity":1,"message":"236","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":16},{"ruleId":"237","severity":1,"message":"238","line":6,"column":5,"nodeType":"239","messageId":"240","endLine":10,"endColumn":9},{"ruleId":"205","severity":1,"message":"223","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":20},{"ruleId":"221","severity":1,"message":"222","line":63,"column":25,"nodeType":"220","endLine":65,"endColumn":27},{"ruleId":"205","severity":1,"message":"223","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":20},{"ruleId":"205","severity":1,"message":"241","line":19,"column":12,"nodeType":"207","messageId":"208","endLine":19,"endColumn":19},{"ruleId":"225","severity":1,"message":"229","line":30,"column":7,"nodeType":"227","endLine":30,"endColumn":9,"suggestions":"242"},{"ruleId":"225","severity":1,"message":"243","line":17,"column":7,"nodeType":"227","endLine":17,"endColumn":9,"suggestions":"244"},{"ruleId":"205","severity":1,"message":"245","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":14},{"ruleId":"205","severity":1,"message":"246","line":2,"column":16,"nodeType":"207","messageId":"208","endLine":2,"endColumn":19},{"ruleId":"205","severity":1,"message":"247","line":2,"column":21,"nodeType":"207","messageId":"208","endLine":2,"endColumn":25},{"ruleId":"205","severity":1,"message":"248","line":2,"column":27,"nodeType":"207","messageId":"208","endLine":2,"endColumn":30},{"ruleId":"221","severity":1,"message":"222","line":8,"column":11,"nodeType":"220","endLine":8,"endColumn":102},{"ruleId":"221","severity":1,"message":"222","line":11,"column":11,"nodeType":"220","endLine":11,"endColumn":134},{"ruleId":"221","severity":1,"message":"222","line":14,"column":11,"nodeType":"220","endLine":14,"endColumn":127},{"ruleId":"205","severity":1,"message":"245","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":14},{"ruleId":"205","severity":1,"message":"246","line":2,"column":16,"nodeType":"207","messageId":"208","endLine":2,"endColumn":19},{"ruleId":"205","severity":1,"message":"247","line":2,"column":21,"nodeType":"207","messageId":"208","endLine":2,"endColumn":25},{"ruleId":"205","severity":1,"message":"248","line":2,"column":27,"nodeType":"207","messageId":"208","endLine":2,"endColumn":30},{"ruleId":"221","severity":1,"message":"222","line":8,"column":11,"nodeType":"220","endLine":8,"endColumn":102},{"ruleId":"221","severity":1,"message":"222","line":11,"column":11,"nodeType":"220","endLine":11,"endColumn":134},{"ruleId":"221","severity":1,"message":"222","line":14,"column":11,"nodeType":"220","endLine":14,"endColumn":127},{"ruleId":"205","severity":1,"message":"245","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":14},{"ruleId":"205","severity":1,"message":"246","line":2,"column":16,"nodeType":"207","messageId":"208","endLine":2,"endColumn":19},{"ruleId":"205","severity":1,"message":"247","line":2,"column":21,"nodeType":"207","messageId":"208","endLine":2,"endColumn":25},{"ruleId":"205","severity":1,"message":"248","line":2,"column":27,"nodeType":"207","messageId":"208","endLine":2,"endColumn":30},{"ruleId":"221","severity":1,"message":"222","line":10,"column":25,"nodeType":"220","endLine":11,"endColumn":70},{"ruleId":"221","severity":1,"message":"222","line":24,"column":12,"nodeType":"220","endLine":24,"endColumn":73},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar",["249"],["250"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Typography' is defined but never used.","'setLimit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Limit', 'Skip', and 'getProducts'. Either include them or remove the dependency array.","ArrayExpression",["251"],"React Hook useEffect has a missing dependency: 'productInfoId'. Either include it or remove the dependency array.",["252"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'Button' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Product' is assigned a value but never used.",["253"],"React Hook useEffect has a missing dependency: 'tboardInfoId'. Either include it or remove the dependency array.",["254"],"'Icon' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'Row' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"257","fix":"259"},{"desc":"260","fix":"261"},"Update the dependencies array to be: [Limit, Skip, getProducts]",{"range":"262","text":"263"},"Update the dependencies array to be: [productInfoId]",{"range":"264","text":"265"},{"range":"266","text":"265"},"Update the dependencies array to be: [tboardInfoId]",{"range":"267","text":"268"},[593,595],"[Limit, Skip, getProducts]",[739,741],"[productInfoId]",[1023,1025],[655,657],"[tboardInfoId]"]