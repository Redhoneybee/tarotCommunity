[{"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\App.js":"1","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"2","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"3","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"4","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\reportWebVitals.js":"5","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\index.js":"6","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_reducers\\index.js":"7","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_actions\\types.js":"8","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_actions\\user_action.js":"9","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_reducers\\user_reducer.js":"10","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\hoc\\auth.js":"11","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\NavBar\\NavBar.js":"12","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\NavBar\\Selection\\RightMenu.js":"13","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\NavBar\\Selection\\LeftMenu.js":"14","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\config.js":"15","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TSpreads\\SpreadsFileUpload.js":"16","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TSpreads\\SpreadsUpload.js":"17","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Upload.js":"18","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\TDirectory.js":"19","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\DetailProductPage.js":"20","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\FileUpload.js":"21","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\ProductImage.js":"22","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\ProductTable.js":"23","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TarotBoard.js":"24","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TBoardUpload.js":"25","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TboardFileUpload.js":"26","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\Update.js":"27","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\Sections\\DetailTboardPage.js":"28","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\Sections\\TboardTable.js":"29","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\utils\\ImageSlider.js":"30","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\TdirecImageSlider.js":"31","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\ImageSlider.js":"32","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TSpreads\\Tspreads.js":"33","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TBoardUpdate.js":"34","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TBoardFileUpload.js":"35","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\Sections\\CommentTable.js":"36","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\home.js":"37","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\Sections\\WriteComment.js":"38"},{"size":3120,"mtime":1611379216483,"results":"39","hashOfConfig":"40"},{"size":2205,"mtime":1611154210192,"results":"41","hashOfConfig":"40"},{"size":1852,"mtime":1610364536657,"results":"42","hashOfConfig":"40"},{"size":2694,"mtime":1610359642845,"results":"43","hashOfConfig":"40"},{"size":362,"mtime":1606625502126,"results":"44","hashOfConfig":"40"},{"size":987,"mtime":1610273097657,"results":"45","hashOfConfig":"40"},{"size":162,"mtime":1610280077801,"results":"46","hashOfConfig":"40"},{"size":125,"mtime":1610282943572,"results":"47","hashOfConfig":"40"},{"size":784,"mtime":1610283025516,"results":"48","hashOfConfig":"40"},{"size":555,"mtime":1610283075294,"results":"49","hashOfConfig":"40"},{"size":1192,"mtime":1610523703374,"results":"50","hashOfConfig":"40"},{"size":1400,"mtime":1610530277005,"results":"51","hashOfConfig":"40"},{"size":1136,"mtime":1610363677516,"results":"52","hashOfConfig":"40"},{"size":1901,"mtime":1610367128841,"results":"53","hashOfConfig":"40"},{"size":57,"mtime":1610350538393,"results":"54","hashOfConfig":"40"},{"size":2360,"mtime":1610542995983,"results":"55","hashOfConfig":"40"},{"size":3317,"mtime":1610608670998,"results":"56","hashOfConfig":"40"},{"size":2893,"mtime":1611319167468,"results":"57","hashOfConfig":"40"},{"size":4480,"mtime":1611381454089,"results":"58","hashOfConfig":"40"},{"size":1382,"mtime":1611385231822,"results":"59","hashOfConfig":"40"},{"size":2346,"mtime":1610600773868,"results":"60","hashOfConfig":"40"},{"size":645,"mtime":1610609475961,"results":"61","hashOfConfig":"40"},{"size":712,"mtime":1611385111330,"results":"62","hashOfConfig":"40"},{"size":1924,"mtime":1611387755862,"results":"63","hashOfConfig":"40"},{"size":2935,"mtime":1613018142119,"results":"64","hashOfConfig":"40"},{"size":2357,"mtime":1611132747837,"results":"65","hashOfConfig":"40"},{"size":3419,"mtime":1611131908769,"results":"66","hashOfConfig":"40"},{"size":874,"mtime":1610885943846,"results":"67","hashOfConfig":"40"},{"size":1336,"mtime":1613028263885,"results":"68","hashOfConfig":"40"},{"size":694,"mtime":1610948263180,"results":"69","hashOfConfig":"40"},{"size":706,"mtime":1610958678799,"results":"70","hashOfConfig":"40"},{"size":494,"mtime":1611381393154,"results":"71","hashOfConfig":"40"},{"size":1328,"mtime":1611380193703,"results":"72","hashOfConfig":"40"},{"size":3571,"mtime":1613017874765,"results":"73","hashOfConfig":"40"},{"size":2132,"mtime":1611132821381,"results":"74","hashOfConfig":"40"},{"size":1605,"mtime":1613036807080,"results":"75","hashOfConfig":"40"},{"size":3358,"mtime":1611312863415,"results":"76","hashOfConfig":"40"},{"size":1129,"mtime":1613037974045,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nhshyc",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"115"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"111"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"144"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"136"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"136"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"115"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"144"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"115"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\App.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\LandingPage\\LandingPage.js",[],["180","181"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\LoginPage\\LoginPage.js",["182"],"  \r\nimport React, { useState } from 'react'\r\nimport Axios from 'axios'\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginUser } from '../../../_actions/user_action';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './css/LoginPage.css'\r\nfunction LoginPage(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [Email, setEmail] = useState(\"\")\r\n    const [Password, setPassword] = useState(\"\")\r\n\r\n    const onEmailHandler = (event) => {\r\n        setEmail(event.currentTarget.value)\r\n    }\r\n\r\n    const onPasswordHandler = (event) => {\r\n        setPassword(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        let body = {\r\n            email: Email,\r\n            password: Password\r\n        }\r\n\r\n        dispatch(loginUser(body))\r\n            .then(response => {\r\n                if (response.payload.loginSuccess) {\r\n                    props.history.push('/')\r\n                } else {\r\n                    alert('Error˝')\r\n                }\r\n            })\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"login-box\">\r\n            <h2>Login</h2>\r\n            <form onSubmit={onSubmitHandler}\r\n            >    \r\n                <div className=\"user-box\">\r\n                <label>Email</label>\r\n                <input type=\"email\" value={Email} onChange={onEmailHandler} required=\"\" />\r\n                </div>\r\n                <div className=\"user-box\">\r\n                <label>Password</label>\r\n                <input type=\"password\" value={Password} onChange={onPasswordHandler} required=\"\" />\r\n                </div>\r\n                <button type=\"Submit\">\r\n                 Login\r\n                </button>\r\n                <a href=\"/register\">register now!</a>\r\n               </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginPage)","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["183"],"import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { registerUser } from '../../../_actions/user_action';\r\nimport Axios from 'axios';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Register.css';\r\nfunction RegisterPage(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const [Email, setEmail] = useState(\"\")\r\n    const [Name, setName] = useState(\"\")\r\n    const [Password, setPassword] = useState(\"\")\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n\r\n    const onEmailHandler = (event) => {\r\n        setEmail(event.currentTarget.value)\r\n    }\r\n\r\n    const onNameHandler = (event) => {\r\n        setName(event.currentTarget.value)\r\n    }\r\n\r\n    const onPasswordHandler = (event) => {\r\n        setPassword(event.currentTarget.value)\r\n    }\r\n\r\n    const onConfirmPasswordHandler = (event) => {\r\n        setConfirmPassword(event.currentTarget.value)\r\n    }\r\n\r\n    const onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (Password !== ConfirmPassword) {\r\n            return alert('비밀번호와 비밀번호 확인은 같아야 합니다.')\r\n        }\r\n\r\n        let body = {\r\n            email: Email,\r\n            password: Password,\r\n            name: Name\r\n        }\r\n        dispatch(registerUser(body))\r\n            .then(response => {\r\n                if (response.payload.success) {\r\n                    props.history.push(\"/login\")\r\n                } else {\r\n                    alert(\"Failed to sign up\")\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"register-box\">\r\n            <h2>Register</h2>\r\n            <form onSubmit={onSubmitHandler}\r\n            >   \r\n            <div className=\"user-box\">\r\n                <label>Email</label>\r\n                <input type=\"email\" value={Email} onChange={onEmailHandler} />\r\n               </div>\r\n               <div className=\"user-box\">\r\n                <label>Name</label>\r\n                <input type=\"text\" value={Name} onChange={onNameHandler} />\r\n              </div>\r\n              <div className=\"user-box\">\r\n                <label>Password</label>\r\n                <input type=\"password\" value={Password} onChange={onPasswordHandler} />\r\n                </div>\r\n                <div className=\"user-box\">\r\n                <label>Confirm Password</label>\r\n                <input type=\"password\" value={ConfirmPassword} onChange={onConfirmPasswordHandler} />\r\n                </div>\r\n                <br />\r\n                <button type=\"submit\">\r\n                   Sign up\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(RegisterPage)","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\reportWebVitals.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\index.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_reducers\\index.js",[],["184","185"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_actions\\types.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_actions\\user_action.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\_reducers\\user_reducer.js",["186","187","188","189"],"import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER\r\n} from '../_actions/types';\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loginSuccess: action.payload }\r\n            break;\r\n        case REGISTER_USER:\r\n            return { ...state, register: action.payload }\r\n            break;\r\n            case AUTH_USER:\r\n                return { ...state, userData: action.payload }\r\n                break;\r\n        default:\r\n            return state;\r\n    }\r\n}",["190","191"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\hoc\\auth.js",["192"],"import React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_action';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (ComposedClass, reload, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n\r\n            dispatch(auth()).then(async response => {\r\n                if (await !response.payload.isAuth) {\r\n                    if (reload) {\r\n                        props.history.push('/login')\r\n                    }\r\n                } else {\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    else {\r\n                        if (reload === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            \r\n        }, [dispatch, props.history, user.googleAuth])\r\n\r\n        return (\r\n            <ComposedClass {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\NavBar\\NavBar.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\NavBar\\Selection\\RightMenu.js",[],["193","194"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\NavBar\\Selection\\LeftMenu.js",["195","196"],"import React from 'react';\r\nimport { Menu } from 'antd';\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nfunction LeftMenu(props) {\r\n  return (\r\n    <Menu mode={props.mode}>\r\n    <Menu.Item key=\"mail\">\r\n      <a href=\"/\">Home</a>\r\n    </Menu.Item>\r\n    <SubMenu title={<span>타로오션</span>}>\r\n      <MenuItemGroup title=\"타로이야기나눔\">\r\n        <Menu.Item key=\"tarot_D\"><a href=\"/tarotdirectory\">타로백과사전</a></Menu.Item>\r\n        <Menu.Item key=\"tarot_S\"><a href=\"/tarotspread\">스프레드배열법</a></Menu.Item>\r\n        <Menu.Item key=\"tarot_B\"><a href=\"/tarotboard\">정보/공유</a></Menu.Item>\r\n      </MenuItemGroup>\r\n    </SubMenu>\r\n\r\n    <SubMenu title={<span>점성학오션</span>}>\r\n      <MenuItemGroup title=\"점성학이야기나눔\">\r\n        <Menu.Item key=\"setting:1\"><a href=\"/tarotdirectory\"></a>점성학알아보기</Menu.Item>\r\n        <Menu.Item key=\"setting:2\"><a href=\"/tarotdirectory\"></a>정보/공유</Menu.Item>\r\n      </MenuItemGroup>\r\n    </SubMenu>\r\n\r\n    <SubMenu title={<span>사주오션</span>}>\r\n      <MenuItemGroup title=\"사주이야기나눔\">\r\n        <Menu.Item key=\"setting:1\">내사주알아보기</Menu.Item>\r\n        <Menu.Item key=\"setting:2\">정보/공유</Menu.Item>\r\n      </MenuItemGroup>\r\n    </SubMenu>\r\n\r\n    <SubMenu title={<span>커뮤니티</span>}>\r\n      <MenuItemGroup title=\"도란도란\">\r\n        <Menu.Item key=\"setting:1\">가입인사</Menu.Item>\r\n        <Menu.Item key=\"setting:2\">자유수다/고민방</Menu.Item>\r\n        <Menu.Item key=\"setting:3\">20대수다/고민방</Menu.Item>\r\n        <Menu.Item key=\"setting:4\">30대수다/고민방</Menu.Item>\r\n        <Menu.Item key=\"setting:5\">40대수다/고민방</Menu.Item>\r\n        <Menu.Item key=\"setting:6\">50대수다/고민방</Menu.Item>\r\n      </MenuItemGroup>\r\n    </SubMenu>\r\n  </Menu>\r\n  )\r\n}\r\n\r\nexport default LeftMenu",["197","198"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\config.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TSpreads\\SpreadsFileUpload.js",["199"],"import React, { useState } from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport axios from 'axios';\r\n\r\n\r\nfunction SpreadsFileUpload(props) {\r\n\r\n    const [Images, setImages] = useState([])\r\n\r\n    const dropHandler = (files) => {\r\n\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/fomr-data' }\r\n        }\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/spreads/tarot', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setImages([...Images, response.data.filePath])\r\n                    props.refreshFunction([...Images, response.data.filePath])\r\n\r\n\r\n                } else {\r\n                    alert('파일을 저장하는데 실패했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    const deleteHandler = (image) => {\r\n        const currentIndex = Images.indexOf(image);\r\n        let newImages = [...Images]\r\n        newImages.splice(currentIndex, 1)\r\n        setImages(newImages)\r\n        props.refreshFunction(newImages)\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Dropzone onDrop={dropHandler}>\r\n                {({ getRootProps, getInputProps }) => (\r\n                    <div\r\n                        style={{\r\n                            width: 300, height: 240, border: '1px solid lightgray',\r\n                            display: 'flex', alignItems: 'center', justifyContent: 'center'\r\n                        }}\r\n                        {...getRootProps()}>\r\n                        <input {...getInputProps()} />\r\n                        <p>이미지첨부</p>\r\n                    </div>\r\n                )}\r\n            </Dropzone>\r\n\r\n            <div style={{ display: 'flex', width: '350px', height: '240px', overflowX: 'scroll' }}>\r\n\r\n                {Images.map((image, index) => (\r\n                    <div onClick={() => deleteHandler(image)} key={index}>\r\n                        <img style={{ minWidth: '300px', width: '300px', height: '240px' }}\r\n                            src={`http://localhost:5000/${image}`}\r\n                        />\r\n                    </div>\r\n                ))}\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpreadsFileUpload","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TSpreads\\SpreadsUpload.js",["200"],"import React, { useState } from 'react'\r\nimport { Typography, Button, Form, Input } from 'antd';\r\nimport FileUpload from './SpreadsFileUpload';\r\nimport Axios from 'axios';\r\nconst { TextArea } = Input;\r\n\r\nconst Continents = [\r\n    { key: 1, value: \"Africa\" },\r\n    { key: 2, value: \"Europe\" },\r\n    { key: 3, value: \"Asia\" },\r\n    { key: 4, value: \"North America\" },\r\n    { key: 5, value: \"South America\" },\r\n    { key: 6, value: \"Australia\" },\r\n    { key: 7, value: \"Antarctica\" }\r\n]\r\n\r\nfunction SpreadsUpload(props) {\r\n\r\n    const [Title, setTitle] = useState(\"\")\r\n    const [Description, setDescription] = useState(\"\")\r\n    const [Continent, setContinent] = useState(1)\r\n    const [Images, setImages] = useState([])\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setTitle(event.currentTarget.value)\r\n    }\r\n\r\n    const descriptionChangeHandler = (event) => {\r\n        setDescription(event.currentTarget.value)\r\n    }\r\n\r\n    const continentChangeHandler = (event) => {\r\n        setContinent(event.currentTarget.value)\r\n    }\r\n\r\n    const updateImages = (newImages) => {\r\n        setImages(newImages)\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!Title || !Description || !Continent || Images.length === 0) {\r\n            return alert(\" 모든 값을 넣어주셔야 합니다.\")\r\n        }\r\n\r\n\r\n        //서버에 채운 값들을 request로 보낸다.\r\n\r\n        const body = {\r\n            //로그인 된 사람의 ID \r\n            writer: props.user.userData._id,\r\n            title: Title,\r\n            description: Description,\r\n            images: Images,\r\n            continents: Continent\r\n        }\r\n\r\n        Axios.post('/api/spreads', body)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('상품 업로드에 성공 했습니다.')\r\n                    props.history.push('/')\r\n                } else {\r\n                    alert('상품 업로드에 실패 했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\r\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\r\n                <h2> 여행 상품 업로드</h2>\r\n            </div>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                {/* DropZone */}\r\n                <FileUpload refreshFunction={updateImages} />\r\n\r\n                <br />\r\n                <br />\r\n                <label>이름</label>\r\n                <Input onChange={titleChangeHandler} value={Title} />\r\n                <br />\r\n                <br />\r\n                <label>설명</label>\r\n                <TextArea onChange={descriptionChangeHandler} value={Description} />\r\n                <br />\r\n                <br />\r\n                <select onChange={continentChangeHandler} value={Continent}>\r\n                    {Continents.map(item => (\r\n                        <option key={item.key} value={item.key}> {item.value}</option>\r\n                    ))}\r\n                </select>\r\n                <br />\r\n                <br />\r\n                <Button type=\"submit\" onClick={submitHandler}>\r\n                    확인\r\n                </Button>\r\n            </Form>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpreadsUpload","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Upload.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\TDirectory.js",["201","202","203"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Meta from \"antd/lib/card/Meta\";\r\nimport { Col, Card, Row } from \"antd\";\r\nimport ImageSlider from \"./ImageSlider\";\r\nimport TdirecImageSlider from \"./Sections/TdirecImageSlider\";\r\nfunction TDirectory(props) {\r\n  const [Products, setProducts] = useState([]);\r\n  const [Skip, setSkip] = useState(0);\r\n  const [Limit, setLimit] = useState(8);\r\n  const [PostSize, setPostSize] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let body = {\r\n      skip: Skip,\r\n      limit: Limit,\r\n    };\r\n    getProducts(body);\r\n  }, []);\r\n  const getProducts = (body) => {\r\n    axios.post(\"/api/product/products\", body).then((response) => {\r\n      if (response.data.success) {\r\n        if (body.loadMore) {\r\n          setProducts([...Products, ...response.data.productInfo]);\r\n        }\r\n        setPostSize(response.data.postSize);\r\n        setProducts(response.data.productInfo);\r\n      } else {\r\n        alert(\"상품들을 가져오는데 실패했습니다.\");\r\n      }\r\n    });\r\n  };\r\n  const loadMoreHandler = () => {\r\n    let skip = Skip + Limit;\r\n    //0 + 8\r\n    // 8 + 8\r\n    let body = {\r\n      skip: Skip,\r\n      limit: Limit,\r\n      loadMore: true,\r\n    };\r\n\r\n    getProducts(body);\r\n    setSkip(skip);\r\n  };\r\n  const renderCards = Products.map((productInfo, index) => {\r\n    console.log(\"productInfo\", productInfo);\r\n    return (\r\n      <Col lg={8} md={8} xs={8} key={index}>\r\n        <Card\r\n          cover={\r\n            <a href={`/product/${productInfo._id}`}>\r\n              <ImageSlider images={productInfo.images} />\r\n            </a>\r\n          }\r\n        >\r\n          <Meta title={productInfo.title} />\r\n        </Card>\r\n      </Col>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div style={{ width: \"75%\", margin: \"3rem auto\" }}>\r\n      <TdirecImageSlider />\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <h2>타로 백과사전</h2>\r\n        <p>\r\n          주요 Arcana 타로 카드의 의미 주요 Arcana 타로 카드는 삶의 교훈, 업장의\r\n          영향 및 깨달음을 향한 영혼의 여정에 영향을 미치는 큰 원형 테마를\r\n          나타냅니다. 주요 Arcana 카드의 의미는 깊고 복잡합니다 – 아름다운\r\n          방식으로! 이 타로 카드는 인간 의식의 구조를 진정으로 표현하고 시대를\r\n          거쳐 내려온 삶의 교훈의 열쇠를 담고 있습니다. 트럼프 카드라고도 알려진\r\n          Major Arcana 카드에는 번호가 매겨진 21 장의 카드와 번호가 매겨지지\r\n          않은 1 장의 카드 (Fool)가 포함됩니다. The Fool은 Major Arcana의\r\n          주인공이며 각 카드를 통해 여행을하며 새로운 교사를 만나고 새로운 삶의\r\n          교훈을 배우고 결국에는 World 카드로 그의 여정을 완료합니다. 이것은\r\n          Fool 's Journey로 알려져 있으며 Major Arcana 타로 카드 의미의 스토리\r\n          라인을 이해하는 데 도움이되는 방법입니다. 타로 읽기에서 Major Arcana\r\n          카드는 무엇을 의미합니까? 타로 독서에서 Major Arcana 카드를 보면 현재\r\n          경험하고있는 삶의 교훈과 주제에 대해 성찰하라는 부름을 받고 있습니다.\r\n          Major Arcana 카드는 종종 전체 타로 읽기에 대한 장면을 설정하며 다른\r\n          카드는 핵심 Arcana 의미와 관련이 있습니다. 타로 독서가 대부분 아르카나\r\n          타로 카드 일 때 그것은 무엇을 의미합니까? 타로 읽기가 주로 주요 Arcana\r\n          카드로 구성되어 있으면 장기적인 영향을 미칠 수있는 인생을 바꾸는\r\n          이벤트를 경험하게됩니다. 영적, 개인적 탐구에서 더 발전하기\r\n          위해주의해야 할 중요한 교훈이 있습니다. 그러나 주요 Arcana 타로 카드의\r\n          대부분이 뒤집힌 경우 이러한 중요한 삶의 교훈에 충분한주의를 기울이지\r\n          않고 있으며 앞으로 나아 가기 전에 먼저 교훈을 마스터해야한다는 신호일\r\n          수 있습니다.\r\n        </p>\r\n      </div>\r\n      <Row gutter={[16, 16]}>{renderCards}</Row>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <a href=\"/tarotdirectory/upload\">add</a>\r\n        <button onClick={loadMoreHandler}>더보기</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TDirectory;\r\n","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\DetailProductPage.js",["204"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport ProductTable from \"./ProductTable\";\r\nimport ProductImage from \"./ProductImage\";\r\nimport { Col, Row } from \"antd\";\r\nfunction DetailProductPage(props) {\r\n  const productInfoId = props.match.params.productInfoId;\r\n  const [Product, setProduct] = useState({});\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/api/product/products_by_id?id=${productInfoId}&type=single`)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          console.log(\"response.data\", response.data);\r\n          setProduct(response.data.productInfo[0]);\r\n        } else {\r\n          alert(\"상세 정보 가져오기를 실패했습니다\");\r\n        }\r\n      });\r\n  }, []);\r\n  return (\r\n    <div style={{ width: \"100%\", padding: \"3rem 4rem\" }}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          paddingTop: \"30px\",\r\n        }}\r\n      >\r\n        <h1>{Product.title}</h1>\r\n      </div>\r\n\r\n      <br />\r\n      <Row gutter={[16, 16]}>\r\n        <Col lg={12} sm={24}>\r\n          {/* ProductImage */}\r\n          <ProductImage detail={Product} />\r\n        </Col>\r\n        <Col lg={12} sm={24}>\r\n          {/* ProductInfo */}\r\n          <ProductTable detail={Product} />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailProductPage;\r\n",["205","206"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\FileUpload.js",["207"],"import React, { useState } from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport axios from 'axios';\r\n\r\n\r\nfunction FileUpload(props) {\r\n\r\n    const [Images, setImages] = useState([])\r\n\r\n    const dropHandler = (files) => {\r\n\r\n        let formData = new FormData();\r\n        const config = {\r\n            header: { 'content-type': 'multipart/fomr-data' }\r\n        }\r\n        formData.append(\"file\", files[0])\r\n\r\n        axios.post('/api/product/image', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setImages([...Images, response.data.filePath])\r\n                    props.refreshFunction([...Images, response.data.filePath])\r\n\r\n\r\n                } else {\r\n                    alert('파일을 저장하는데 실패했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    const deleteHandler = (image) => {\r\n        const currentIndex = Images.indexOf(image);\r\n        let newImages = [...Images]\r\n        newImages.splice(currentIndex, 1)\r\n        setImages(newImages)\r\n        props.refreshFunction(newImages)\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Dropzone onDrop={dropHandler}>\r\n                {({ getRootProps, getInputProps }) => (\r\n                    <div\r\n                        style={{\r\n                            width: 300, height: 240, border: '1px solid lightgray',\r\n                            display: 'flex', alignItems: 'center', justifyContent: 'center'\r\n                        }}\r\n                        {...getRootProps()}>\r\n                        <input {...getInputProps()} />\r\n                        <p>이미지첨부</p>\r\n                    </div>\r\n                )}\r\n            </Dropzone>\r\n\r\n            <div style={{ display: 'flex', width: '350px', height: '240px', overflowX: 'scroll' }}>\r\n\r\n                {Images.map((image, index) => (\r\n                    <div onClick={() => deleteHandler(image)} key={index}>\r\n                        <img style={{ minWidth: '300px', width: '300px', height: '240px' }}\r\n                            src={`http://localhost:5000/${image}`}\r\n                        />\r\n                    </div>\r\n                ))}\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileUpload",["208","209"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\ProductImage.js",["210"],"import React, { useEffect,useState } from 'react';\r\nimport ImageGallery from 'react-image-gallery';\r\n\r\nfunction ProductImage(props) {\r\n    const [Images, setImages] = useState([])\r\n    useEffect(() => {\r\n     if(props.detail.images && props.detail.images.length>0 ) {\r\n         let images = []\r\n         props.detail.images.map(item =>{\r\n             images.push({\r\n                 original:`http://localhost:5000/${item}`\r\n             })\r\n         })\r\n         setImages(images)\r\n     }\r\n    }, [props.detail])\r\n    return (\r\n        <div>\r\n            <ImageGallery items={Images}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductImage\r\n","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\ProductTable.js",["211","212","213","214"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TarotBoard.js",[],["215","216"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TBoardUpload.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TboardFileUpload.js",["217"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\Update.js",["218","219","220"],"import React, { useState, useEffect } from \"react\";\r\nimport { Typography, Button, Form, Input } from \"antd\";\r\nimport FileUpload from \"../FileUpload\";\r\nimport Axios from \"axios\";\r\nconst { TextArea } = Input;\r\n\r\nconst Continents = [\r\n  { key: 1, value: \"Africa\" },\r\n  { key: 2, value: \"Europe\" },\r\n  { key: 3, value: \"Asia\" },\r\n  { key: 4, value: \"North America\" },\r\n  { key: 5, value: \"South America\" },\r\n  { key: 6, value: \"Australia\" },\r\n  { key: 7, value: \"Antarctica\" },\r\n];\r\n\r\nfunction Update(props) {\r\n  const productInfoId = props.match.params.productInfoId;\r\n  const [Product, setProduct] = useState({});\r\n  useEffect(() => {\r\n    Axios.get(\r\n      `/api/product/products_by_id?id=${productInfoId}&type=single`\r\n    ).then((response) => {\r\n      if (response.data.success) {\r\n        console.log(\"response.data\", response.data);\r\n        setProduct(response.data.productInfo[0]);\r\n      } else {\r\n        alert(\"상세 정보 가져오기를 실패했습니다\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const [Title, setTitle] = useState(\"\");\r\n  const [Description, setDescription] = useState(\"\");\r\n  const [Continent, setContinent] = useState(1);\r\n  const [Images, setImages] = useState([]);\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setTitle(event.currentTarget.value);\r\n  };\r\n\r\n  const descriptionChangeHandler = (event) => {\r\n    setDescription(event.currentTarget.value);\r\n  };\r\n\r\n  const continentChangeHandler = (event) => {\r\n    setContinent(event.currentTarget.value);\r\n  };\r\n\r\n  const updateImages = (newImages) => {\r\n    setImages(newImages);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!Title || !Description || !Continent || Images.length === 0) {\r\n      return alert(\" 모든 값을 넣어주셔야 합니다.\");\r\n    }\r\n\r\n    //서버에 채운 값들을 request로 보낸다.\r\n\r\n    const body = {\r\n      //로그인 된 사람의 ID\r\n      writer: props.user.userData._id,\r\n      title: Title,\r\n      description: Description,\r\n      images: Images,\r\n      continents: Continent,\r\n    };\r\n\r\n    Axios.post(\"/api/tboard/update\", body).then((response) => {\r\n      if (response.data.success) {\r\n        alert(\"상품 업로드에 성공 했습니다.\");\r\n        props.history.push(\"/\");\r\n      } else {\r\n        alert(\"상품 업로드에 실패 했습니다.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"700px\", margin: \"2rem auto\" }}>\r\n      <div style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\r\n        <h2>글쓰기</h2>\r\n      </div>\r\n\r\n      <Form onSubmit={submitHandler}>\r\n        {/* DropZone */}\r\n        <FileUpload refreshFunction={updateImages} />\r\n\r\n        <br />\r\n        <br />\r\n        <label>이름</label>\r\n        <Input onChange={titleChangeHandler} value={Title} />\r\n        <br />\r\n        <br />\r\n        <label>설명</label>\r\n        <TextArea onChange={descriptionChangeHandler} value={Description} />\r\n        <br />\r\n        <br />\r\n        <select onChange={continentChangeHandler} value={Continent}>\r\n          {Continents.map((item) => (\r\n            <option key={item.key} value={item.key}>\r\n              {\" \"}\r\n              {item.value}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br />\r\n        <br />\r\n        <Button type=\"submit\" onClick={submitHandler}>\r\n          확인\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Update;\r\n","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\Sections\\DetailTboardPage.js",["221"],"import React,{useEffect,useState} from 'react'\r\nimport axios from 'axios';\r\nimport TboardTable from './TboardTable';\r\nfunction DetailTboardPage(props) {\r\n    const tboardInfoId = props.match.params.tboardInfoId\r\n    const [Tboards, setTboards] = useState({})\r\n    useEffect(()=>{\r\n        axios.get(`/api/tboard/tboard_by_id?id=${tboardInfoId}&type=single`)\r\n        .then(response => {\r\n            if(response.data.success) {  \r\n                    console.log('response.data',response.data)\r\n                    setTboards(response.data.tboardInfo[0])\r\n            }else {\r\n                alert('상세 정보 가져오기를 실패했습니다')\r\n            }\r\n        })\r\n    },[])\r\n    return (\r\n        <form>\r\n            <div>\r\n                    <TboardTable detail={Tboards}/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default DetailTboardPage\r\n","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\Sections\\TboardTable.js",["222","223"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\components\\views\\utils\\ImageSlider.js",["224","225","226","227","228","229","230"],"import React from 'react'\r\nimport { Icon, Col, Card, Row, Carousel } from 'antd';\r\nfunction ImageSlider(props) {\r\n    return (\r\n        <div>\r\n           <Carousel autoplay>\r\n    <div>\r\n      <h3><img className=\"banner-container\"src=\"https://i.imgur.com/uC95jbj.jpg\" title=\"tarot1.JPG\"/></h3>\r\n    </div>\r\n    <div>\r\n      <h3><img className=\"banner-container\"src=\"https://i.imgur.com/SOMbqAH.jpg\" title=\"viva-luna-studios-GLsAydqqgzs-unsplash.jpg\"/></h3>\r\n    </div>\r\n    <div>\r\n      <h3><img className=\"banner-container\" src=\"https://i.imgur.com/uuQCkaO.jpg\" title=\"dan-russo-adkrsIr_0iw-unsplash.jpg\"/></h3>\r\n    </div>\r\n  </Carousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageSlider","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\TdirecImageSlider.js",["231","232","233","234","235","236","237"],"import React from 'react'\r\nimport { Icon, Col, Card, Row, Carousel } from 'antd';\r\nfunction TdirecImageSlider(props) {\r\n    return (\r\n        <div>\r\n           <Carousel autoplay>\r\n    <div>\r\n      <h3><img className=\"banner-container\"src=\"https://i.imgur.com/uC95jbj.jpg\" title=\"tarot1.JPG\"/></h3>\r\n    </div>\r\n    <div>\r\n      <h3><img className=\"banner-container\"src=\"https://i.imgur.com/SOMbqAH.jpg\" title=\"viva-luna-studios-GLsAydqqgzs-unsplash.jpg\"/></h3>\r\n    </div>\r\n    <div>\r\n      <h3><img className=\"banner-container\" src=\"https://i.imgur.com/uuQCkaO.jpg\" title=\"dan-russo-adkrsIr_0iw-unsplash.jpg\"/></h3>\r\n    </div>\r\n  </Carousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TdirecImageSlider","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\ImageSlider.js",["238","239","240","241","242"],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TSpreads\\Tspreads.js",["243"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Meta from \"antd/lib/card/Meta\";\r\nimport { Col, Card, Row } from \"antd\";\r\n\r\nfunction Tspreads(props) {\r\n  const [Spreads, setSpreads] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.post(\"/api/spreads/spreads\").then((response) => {\r\n      if (response.data.success) {\r\n        console.log(response.data);\r\n        setSpreads(response.data.spreadInfo);\r\n      } else {\r\n        alert(\"상품들을 가져오는데 실패했습니다.\");\r\n      }\r\n    });\r\n  }, []);\r\n  const renderCards = Spreads.map((spreadInfo, index) => {\r\n    console.log(\"spreadInfo\", spreadInfo);\r\n    return (\r\n      <Col lg={4} md={4} xs={4} key={index}>\r\n        <Card\r\n          cover={<img src={`http://localhost:5000/${spreadInfo.images[0]}`} />}\r\n        >\r\n          <Meta title={spreadInfo.title} description={spreadInfo.description} />\r\n        </Card>\r\n      </Col>\r\n    );\r\n  });\r\n  return (\r\n    <div style={{ width: \"75%\", margin: \"3rem auto\" }}>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <h2>타로 백과사전</h2>\r\n      </div>\r\n      <Row gutter={[16, 16]}>{renderCards}</Row>\r\n\r\n      <div style={{ justifyContent: \"center\" }}>\r\n        <a href=\"/spreads/upload\">add</a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tspreads;\r\n","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TBoardUpdate.js",["244","245","246"],"import React, { useState, useEffect } from \"react\";\nimport { Typography, Button, Form, Input } from \"antd\";\nimport TBoardFileUpload from \"./TBoardFileUpload\";\nimport Axios from \"axios\";\nconst { TextArea } = Input;\n\nconst Continents = [\n  { key: 1, value: \"Africa\" },\n  { key: 2, value: \"Europe\" },\n  { key: 3, value: \"Asia\" },\n  { key: 4, value: \"North America\" },\n  { key: 5, value: \"South America\" },\n  { key: 6, value: \"Australia\" },\n  { key: 7, value: \"Antarctica\" },\n];\n\nfunction TBoardUpdate(props) {\n  const tboardInfoId = props.match.params.tboardInfoId;\n  const [Tboards, setTboards] = useState({});\n  useEffect(() => {\n    Axios.get(`/api/tboard/tboard_by_id?id=${tboardInfoId}&type=single`).then(\n      (response) => {\n        if (response.data.success) {\n          console.log(\"response.data\", response.data);\n          const info = response.data.tboardInfo[0];\n          setTboards(response.data.tboardInfo[0]);\n          setTitle(info.title);\n          setDescription(info.description);\n          setContinent(info.continents);\n          setImages(info.images);\n        } else {\n          alert(\"상세 정보 가져오기를 실패했습니다\");\n        }\n      }\n    );\n  }, []);\n\n  const [Title, setTitle] = useState(\"\");\n  const [Description, setDescription] = useState(\"\");\n  const [Continent, setContinent] = useState(1);\n  const [Images, setImages] = useState([]);\n\n  const titleChangeHandler = (event) => {\n    setTitle(event.currentTarget.value);\n  };\n\n  const descriptionChangeHandler = (event) => {\n    setDescription(event.currentTarget.value);\n  };\n\n  const continentChangeHandler = (event) => {\n    setContinent(event.currentTarget.value);\n  };\n\n  const updateImages = (newImages) => {\n    setImages(newImages);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    //서버에 채운 값들을 request로 보낸다.\n\n    const body = {\n      //로그인 된 사람의 ID\n      id: tboardInfoId,\n      writer: props.user.userData._id,\n      title: Title,\n      description: Description,\n      images: Images,\n      continent: Continent,\n    };\n\n    if (!Title || !Description || !Continent || Images.length === 0) {\n      return alert(\" 모든 값을 넣어주셔야 합니다.\");\n    }\n\n    Axios.post(\"/api/tboard/update\", body).then((response) => {\n      if (response.data.success) {\n        alert(\"상품 업로드에 성공 했습니다.\");\n        props.history.push(\"/tarotboard\");\n      } else {\n        alert(\"상품 업로드에 실패 했습니다.\");\n      }\n    });\n  };\n\n  return (\n    <div style={{ maxWidth: \"700px\", margin: \"2rem auto\" }}>\n      <div style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\n        <h2>글쓰기</h2>\n      </div>\n\n      <Form onSubmit={submitHandler}>\n        {/* DropZone */}\n        <TBoardFileUpload refreshFunction={updateImages} />\n\n        <br />\n        <br />\n        <label>제목</label>\n        <Input onChange={titleChangeHandler} value={Title} />\n        <br />\n        <br />\n        <label>설명</label>\n        <TextArea onChange={descriptionChangeHandler} value={Description} />\n        <br />\n        <br />\n        <select onChange={continentChangeHandler} value={Continent}>\n          {Continents.map((item) => (\n            <option key={item.key} value={item.key}>\n              {\" \"}\n              {item.value}\n            </option>\n          ))}\n        </select>\n        <br />\n        <br />\n        <Button type=\"submit\" onClick={submitHandler}>\n          확인\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default TBoardUpdate;\n","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\TBoardFileUpload.js",["247"],"import React, { useState } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport axios from \"axios\";\r\n\r\nfunction TBoardFileUpload(props) {\r\n  const [Images, setImages] = useState([]);\r\n\r\n  const dropHandler = (files) => {\r\n    let formData = new FormData();\r\n    const config = {\r\n      header: { \"content-type\": \"multipart/fomr-data\" },\r\n    };\r\n    formData.append(\"file\", files[0]);\r\n\r\n    axios.post(\"/api/tboard/image\", formData, config).then((response) => {\r\n      if (response.data.success) {\r\n        setImages([...Images, response.data.filePath]);\r\n        props.refreshFunction([...Images, response.data.filePath]);\r\n      } else {\r\n        alert(\"파일을 저장하는데 실패했습니다.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const deleteHandler = (image) => {\r\n    const currentIndex = Images.indexOf(image);\r\n    let newImages = [...Images];\r\n    newImages.splice(currentIndex, 1);\r\n    setImages(newImages);\r\n    props.refreshFunction(newImages);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n      <Dropzone onDrop={dropHandler}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div\r\n            style={{\r\n              width: 300,\r\n              height: 240,\r\n              border: \"1px solid lightgray\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n            {...getRootProps()}\r\n          >\r\n            <input {...getInputProps()} />\r\n            <p>이미지첨부</p>\r\n          </div>\r\n        )}\r\n      </Dropzone>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          width: \"350px\",\r\n          height: \"240px\",\r\n          overflowX: \"scroll\",\r\n        }}\r\n      >\r\n        {Images.map((image, index) => (\r\n          <div onClick={() => deleteHandler(image)} key={index}>\r\n            <img\r\n              style={{ minWidth: \"300px\", width: \"300px\", height: \"240px\" }}\r\n              src={`http://localhost:5000/${image}`}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TBoardFileUpload;\r\n","C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\Sections\\CommentTable.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TDirectory\\Sections\\home.js",[],"C:\\Users\\YOONEUN\\Desktop\\boiler-plate\\client\\src\\pages\\TarotO\\TBoard\\Sections\\WriteComment.js",["248","249","250"],{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":3,"column":8,"nodeType":"257","messageId":"258","endLine":3,"endColumn":13},{"ruleId":"255","severity":1,"message":"256","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":13},{"ruleId":"251","replacedBy":"259"},{"ruleId":"253","replacedBy":"260"},{"ruleId":"261","severity":1,"message":"262","line":7,"column":1,"nodeType":"263","endLine":21,"endColumn":2},{"ruleId":"264","severity":1,"message":"265","line":11,"column":13,"nodeType":"266","messageId":"267","endLine":11,"endColumn":19},{"ruleId":"264","severity":1,"message":"265","line":14,"column":13,"nodeType":"266","messageId":"267","endLine":14,"endColumn":19},{"ruleId":"264","severity":1,"message":"265","line":17,"column":17,"nodeType":"266","messageId":"267","endLine":17,"endColumn":23},{"ruleId":"251","replacedBy":"268"},{"ruleId":"253","replacedBy":"269"},{"ruleId":"261","severity":1,"message":"262","line":5,"column":1,"nodeType":"263","endLine":37,"endColumn":2},{"ruleId":"251","replacedBy":"270"},{"ruleId":"253","replacedBy":"271"},{"ruleId":"272","severity":1,"message":"273","line":22,"column":36,"nodeType":"274","endLine":22,"endColumn":62},{"ruleId":"272","severity":1,"message":"273","line":23,"column":36,"nodeType":"274","endLine":23,"endColumn":62},{"ruleId":"251","replacedBy":"275"},{"ruleId":"253","replacedBy":"276"},{"ruleId":"277","severity":1,"message":"278","line":63,"column":25,"nodeType":"274","endLine":65,"endColumn":27},{"ruleId":"255","severity":1,"message":"279","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":20},{"ruleId":"255","severity":1,"message":"280","line":10,"column":17,"nodeType":"257","messageId":"258","endLine":10,"endColumn":25},{"ruleId":"255","severity":1,"message":"281","line":11,"column":10,"nodeType":"257","messageId":"258","endLine":11,"endColumn":18},{"ruleId":"282","severity":1,"message":"283","line":19,"column":6,"nodeType":"284","endLine":19,"endColumn":8,"suggestions":"285"},{"ruleId":"282","severity":1,"message":"286","line":20,"column":6,"nodeType":"284","endLine":20,"endColumn":8,"suggestions":"287"},{"ruleId":"251","replacedBy":"288"},{"ruleId":"253","replacedBy":"289"},{"ruleId":"277","severity":1,"message":"278","line":63,"column":25,"nodeType":"274","endLine":65,"endColumn":27},{"ruleId":"251","replacedBy":"290"},{"ruleId":"253","replacedBy":"291"},{"ruleId":"292","severity":1,"message":"293","line":9,"column":39,"nodeType":"294","messageId":"295","endLine":9,"endColumn":41},{"ruleId":"255","severity":1,"message":"296","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":25},{"ruleId":"255","severity":1,"message":"297","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":16},{"ruleId":"255","severity":1,"message":"298","line":2,"column":18,"nodeType":"257","messageId":"258","endLine":2,"endColumn":30},{"ruleId":"299","severity":1,"message":"300","line":5,"column":3,"nodeType":"301","messageId":"302","endLine":11,"endColumn":4},{"ruleId":"251","replacedBy":"303"},{"ruleId":"253","replacedBy":"304"},{"ruleId":"277","severity":1,"message":"278","line":63,"column":25,"nodeType":"274","endLine":65,"endColumn":27},{"ruleId":"255","severity":1,"message":"279","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":20},{"ruleId":"255","severity":1,"message":"305","line":19,"column":10,"nodeType":"257","messageId":"258","endLine":19,"endColumn":17},{"ruleId":"282","severity":1,"message":"286","line":31,"column":6,"nodeType":"284","endLine":31,"endColumn":8,"suggestions":"306"},{"ruleId":"282","severity":1,"message":"307","line":17,"column":7,"nodeType":"284","endLine":17,"endColumn":9,"suggestions":"308"},{"ruleId":"255","severity":1,"message":"296","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":25},{"ruleId":"255","severity":1,"message":"309","line":1,"column":27,"nodeType":"257","messageId":"258","endLine":1,"endColumn":36},{"ruleId":"255","severity":1,"message":"310","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":14},{"ruleId":"255","severity":1,"message":"311","line":2,"column":16,"nodeType":"257","messageId":"258","endLine":2,"endColumn":19},{"ruleId":"255","severity":1,"message":"312","line":2,"column":21,"nodeType":"257","messageId":"258","endLine":2,"endColumn":25},{"ruleId":"255","severity":1,"message":"313","line":2,"column":27,"nodeType":"257","messageId":"258","endLine":2,"endColumn":30},{"ruleId":"277","severity":1,"message":"278","line":8,"column":11,"nodeType":"274","endLine":8,"endColumn":102},{"ruleId":"277","severity":1,"message":"278","line":11,"column":11,"nodeType":"274","endLine":11,"endColumn":134},{"ruleId":"277","severity":1,"message":"278","line":14,"column":11,"nodeType":"274","endLine":14,"endColumn":127},{"ruleId":"255","severity":1,"message":"310","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":14},{"ruleId":"255","severity":1,"message":"311","line":2,"column":16,"nodeType":"257","messageId":"258","endLine":2,"endColumn":19},{"ruleId":"255","severity":1,"message":"312","line":2,"column":21,"nodeType":"257","messageId":"258","endLine":2,"endColumn":25},{"ruleId":"255","severity":1,"message":"313","line":2,"column":27,"nodeType":"257","messageId":"258","endLine":2,"endColumn":30},{"ruleId":"277","severity":1,"message":"278","line":8,"column":11,"nodeType":"274","endLine":8,"endColumn":102},{"ruleId":"277","severity":1,"message":"278","line":11,"column":11,"nodeType":"274","endLine":11,"endColumn":134},{"ruleId":"277","severity":1,"message":"278","line":14,"column":11,"nodeType":"274","endLine":14,"endColumn":127},{"ruleId":"255","severity":1,"message":"310","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":14},{"ruleId":"255","severity":1,"message":"311","line":2,"column":16,"nodeType":"257","messageId":"258","endLine":2,"endColumn":19},{"ruleId":"255","severity":1,"message":"312","line":2,"column":21,"nodeType":"257","messageId":"258","endLine":2,"endColumn":25},{"ruleId":"255","severity":1,"message":"313","line":2,"column":27,"nodeType":"257","messageId":"258","endLine":2,"endColumn":30},{"ruleId":"277","severity":1,"message":"278","line":10,"column":13,"nodeType":"274","endLine":13,"endColumn":15},{"ruleId":"277","severity":1,"message":"278","line":24,"column":18,"nodeType":"274","endLine":24,"endColumn":79},{"ruleId":"255","severity":1,"message":"279","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":20},{"ruleId":"255","severity":1,"message":"314","line":19,"column":10,"nodeType":"257","messageId":"258","endLine":19,"endColumn":17},{"ruleId":"282","severity":1,"message":"307","line":36,"column":6,"nodeType":"284","endLine":36,"endColumn":8,"suggestions":"315"},{"ruleId":"277","severity":1,"message":"278","line":64,"column":13,"nodeType":"274","endLine":67,"endColumn":15},{"ruleId":"255","severity":1,"message":"309","line":1,"column":27,"nodeType":"257","messageId":"258","endLine":1,"endColumn":36},{"ruleId":"255","severity":1,"message":"316","line":2,"column":18,"nodeType":"257","messageId":"258","endLine":2,"endColumn":22},{"ruleId":"255","severity":1,"message":"317","line":32,"column":42,"nodeType":"257","messageId":"258","endLine":32,"endColumn":53},"no-native-reassign",["318"],"no-negated-in-lhs",["319"],"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar",["318"],["319"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["318"],["319"],["318"],["319"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["318"],["319"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Typography' is defined but never used.","'setLimit' is assigned a value but never used.","'PostSize' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Limit', 'Skip', and 'getProducts'. Either include them or remove the dependency array.","ArrayExpression",["320"],"React Hook useEffect has a missing dependency: 'productInfoId'. Either include it or remove the dependency array.",["321"],["318"],["319"],["318"],["319"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'Button' is defined but never used.","'Descriptions' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["318"],["319"],"'Product' is assigned a value but never used.",["322"],"React Hook useEffect has a missing dependency: 'tboardInfoId'. Either include it or remove the dependency array.",["323"],"'useEffect' is defined but never used.","'Icon' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'Row' is defined but never used.","'Tboards' is assigned a value but never used.",["324"],"'Form' is defined but never used.","'saveComment' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"327","fix":"329"},{"desc":"330","fix":"331"},{"desc":"330","fix":"332"},"Update the dependencies array to be: [Limit, Skip, getProducts]",{"range":"333","text":"334"},"Update the dependencies array to be: [productInfoId]",{"range":"335","text":"336"},{"range":"337","text":"336"},"Update the dependencies array to be: [tboardInfoId]",{"range":"338","text":"339"},{"range":"340","text":"339"},[593,595],"[Limit, Skip, getProducts]",[714,716],"[productInfoId]",[965,967],[655,657],"[tboardInfoId]",[1162,1164]]